import{o as n,c as s,a}from"./app.a88d1aa8.js";const p='{"title":"机器学习基础","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.  线性回归原理推导","slug":"_1-线性回归原理推导"},{"level":2,"title":"2.  线性回归代码实现","slug":"_2-线性回归代码实现"},{"level":3,"title":"通用代码","slug":"通用代码"},{"level":3,"title":"线性回归","slug":"线性回归"},{"level":3,"title":"多特征回归模型","slug":"多特征回归模型"},{"level":3,"title":"非线性回归","slug":"非线性回归"},{"level":2,"title":"3. 模型评估方法","slug":"_3-模型评估方法"},{"level":3,"title":"数据集切分","slug":"数据集切分"},{"level":3,"title":"交叉验证","slug":"交叉验证"},{"level":3,"title":"混淆矩阵","slug":"混淆矩阵"},{"level":3,"title":"评估指标对比分析","slug":"评估指标对比分析"},{"level":3,"title":"阈值对结果的影响","slug":"阈值对结果的影响"},{"level":3,"title":"ROC曲线","slug":"roc曲线"},{"level":2,"title":"4. 线性回归实验分析","slug":"_4-线性回归实验分析"},{"level":3,"title":"回归方程","slug":"回归方程"},{"level":3,"title":"梯度下降","slug":"梯度下降"},{"level":3,"title":"多项式回归","slug":"多项式回归"},{"level":3,"title":"数据样本数量对结果的影响","slug":"数据样本数量对结果的影响"},{"level":3,"title":"多项式回归的过拟合风险","slug":"多项式回归的过拟合风险"},{"level":3,"title":"正则化","slug":"正则化"},{"level":2,"title":"5.  逻辑回归","slug":"_5-逻辑回归"},{"level":2,"title":"6. 逻辑回归代码实现","slug":"_6-逻辑回归代码实现"},{"level":2,"title":"7.  逻辑回归实验分析","slug":"_7-逻辑回归实验分析"},{"level":3,"title":"数据集","slug":"数据集"},{"level":3,"title":"决策边界的绘制","slug":"决策边界的绘制"},{"level":3,"title":"多类别分类","slug":"多类别分类"},{"level":2,"title":"8. 聚类算法原理","slug":"_8-聚类算法原理"},{"level":2,"title":"9. Kmeans代码实现","slug":"_9-kmeans代码实现"},{"level":2,"title":"10. 聚类算法实验分析","slug":"_10-聚类算法实验分析"},{"level":3,"title":"Kmeans","slug":"kmeans"},{"level":3,"title":"决策边界","slug":"决策边界"},{"level":3,"title":"算法流程","slug":"算法流程"},{"level":3,"title":"不稳定的结果","slug":"不稳定的结果"},{"level":3,"title":"评估方法","slug":"评估方法"},{"level":3,"title":"找到最佳簇数","slug":"找到最佳簇数"},{"level":3,"title":"轮廓系数","slug":"轮廓系数"},{"level":3,"title":"Kmeans存在的问题","slug":"kmeans存在的问题"},{"level":3,"title":"图像分割小例子","slug":"图像分割小例子"},{"level":3,"title":"半监督学习","slug":"半监督学习"},{"level":3,"title":"DBSCAN","slug":"dbscan"},{"level":2,"title":"11. 决策树原理","slug":"_11-决策树原理"},{"level":2,"title":"12. 决策树手写代码实现","slug":"_12-决策树手写代码实现"},{"level":2,"title":"13. 决策树算法实验分析","slug":"_13-决策树算法实验分析"},{"level":3,"title":"决策边界展示","slug":"决策边界展示"},{"level":3,"title":"概率估计","slug":"概率估计"},{"level":3,"title":"决策树中的正则化","slug":"决策树中的正则化"},{"level":3,"title":"对数据的敏感","slug":"对数据的敏感"},{"level":3,"title":"回归任务","slug":"回归任务"},{"level":2,"title":"14. 集成算法原理","slug":"_14-集成算法原理"},{"level":2,"title":"15. 集成算法实验分析","slug":"_15-集成算法实验分析"},{"level":3,"title":"软投票与硬投票","slug":"软投票与硬投票"},{"level":3,"title":"Bagging策略","slug":"bagging策略"},{"level":3,"title":"决策边界","slug":"决策边界-1"},{"level":3,"title":"OOB策略","slug":"oob策略"},{"level":3,"title":"随机森林","slug":"随机森林"},{"level":3,"title":"Boosting-提升策略 AdaBoost","slug":"boosting-提升策略-adaboost"},{"level":3,"title":"Gradient Boosting","slug":"gradient-boosting"},{"level":3,"title":"提前停止策略","slug":"提前停止策略"},{"level":3,"title":"Stacking（堆叠集成）","slug":"stacking（堆叠集成）"},{"level":2,"title":"16. 支持向量机原理","slug":"_16-支持向量机原理"},{"level":2,"title":"17. 支持向量机实验分析","slug":"_17-支持向量机实验分析"},{"level":3,"title":"支持向量机带来的效果","slug":"支持向量机带来的效果"},{"level":3,"title":"数据标准化的影响","slug":"数据标准化的影响"},{"level":2,"title":"18. 神经网络原理","slug":"_18-神经网络原理"},{"level":2,"title":"19. 神经网络代码实现","slug":"_19-神经网络代码实现"},{"level":2,"title":"20. 贝叶斯算法原理","slug":"_20-贝叶斯算法原理"},{"level":2,"title":"21. 贝叶斯代码实现","slug":"_21-贝叶斯代码实现"},{"level":2,"title":"22. 关联规则实战分析","slug":"_22-关联规则实战分析"},{"level":3,"title":"使用mlxtend工具包得出频繁项集与规则","slug":"使用mlxtend工具包得出频繁项集与规则"},{"level":3,"title":"计算规则","slug":"计算规则"},{"level":3,"title":"所有指标的计算公式","slug":"所有指标的计算公式"},{"level":3,"title":"数据需转换成one-hot编码","slug":"数据需转换成one-hot编码"},{"level":3,"title":"电影相关联","slug":"电影相关联"},{"level":2,"title":"23. 关联规则代码实现","slug":"_23-关联规则代码实现"},{"level":2,"title":"24. 词向量word2vec","slug":"_24-词向量word2vec"},{"level":2,"title":"25. 代码实现词向量word2vec","slug":"_25-代码实现词向量word2vec"},{"level":2,"title":"26. 线性判别分析降维 LDA","slug":"_26-线性判别分析降维-lda"},{"level":3,"title":"官方的包","slug":"官方的包"},{"level":2,"title":"27.主成分分析降维 PCA","slug":"_27-主成分分析降维-pca"},{"level":2,"title":"28. HMM","slug":"_28-hmm"}],"relativePath":"note/machine_learning/03_machine_base.md","lastUpdated":1691072027798}',t={},o=a('<h1 id="机器学习基础"><a class="header-anchor" href="#机器学习基础" aria-hidden="true">#</a> 机器学习基础</h1><h2 id="_1-线性回归原理推导"><a class="header-anchor" href="#_1-线性回归原理推导" aria-hidden="true">#</a> 1. 线性回归原理推导</h2><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%921.png" alt=""></p><h2 id="_2-线性回归代码实现"><a class="header-anchor" href="#_2-线性回归代码实现" aria-hidden="true">#</a> 2. 线性回归代码实现</h2><h3 id="通用代码"><a class="header-anchor" href="#通用代码" aria-hidden="true">#</a> 通用代码</h3><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">from</span> utils<span class="token punctuation">.</span>features <span class="token keyword">import</span> prepare_for_training\n\n<span class="token keyword">class</span> <span class="token class-name">LinearRegression</span><span class="token punctuation">:</span>\n\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>data<span class="token punctuation">,</span>labels<span class="token punctuation">,</span>polynomial_degree <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>sinusoid_degree <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>normalize_data<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">&quot;&quot;&quot;\n        1.对数据进行预处理操作\n        2.先得到所有的特征个数\n        3.初始化参数矩阵\n        &quot;&quot;&quot;</span>\n        <span class="token punctuation">(</span>data_processed<span class="token punctuation">,</span>\n         features_mean<span class="token punctuation">,</span> \n         features_deviation<span class="token punctuation">)</span> <span class="token operator">=</span> prepare_for_training<span class="token punctuation">(</span>data<span class="token punctuation">,</span> polynomial_degree<span class="token punctuation">,</span> sinusoid_degree<span class="token punctuation">,</span>normalize_data<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n        <span class="token comment"># print(data_processed)</span>\n        self<span class="token punctuation">.</span>data <span class="token operator">=</span> data_processed  <span class="token comment"># 预处理完的数据</span>\n        self<span class="token punctuation">.</span>labels <span class="token operator">=</span> labels  <span class="token comment"># 标签</span>\n        self<span class="token punctuation">.</span>features_mean <span class="token operator">=</span> features_mean  <span class="token comment">#</span>\n        self<span class="token punctuation">.</span>features_deviation <span class="token operator">=</span> features_deviation\n        self<span class="token punctuation">.</span>polynomial_degree <span class="token operator">=</span> polynomial_degree\n        self<span class="token punctuation">.</span>sinusoid_degree <span class="token operator">=</span> sinusoid_degree\n        self<span class="token punctuation">.</span>normalize_data <span class="token operator">=</span> normalize_data\n        \n        num_features <span class="token operator">=</span> self<span class="token punctuation">.</span>data<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n        self<span class="token punctuation">.</span>theta <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>num_features<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token comment"># train(学习率  迭代次数)</span>\n    <span class="token keyword">def</span> <span class="token function">train</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>alpha<span class="token punctuation">,</span>num_iterations <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">&quot;&quot;&quot;\n                    训练模块，执行梯度下降\n        &quot;&quot;&quot;</span>\n        cost_history <span class="token operator">=</span> self<span class="token punctuation">.</span>gradient_descent<span class="token punctuation">(</span>alpha<span class="token punctuation">,</span>num_iterations<span class="token punctuation">)</span>\n        <span class="token keyword">return</span> self<span class="token punctuation">.</span>theta<span class="token punctuation">,</span>cost_history\n\n    <span class="token comment"># 实现小批量梯度下降法</span>\n    <span class="token keyword">def</span> <span class="token function">gradient_descent</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>alpha<span class="token punctuation">,</span>num_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">&quot;&quot;&quot;\n                    实际迭代模块，会迭代num_iterations次\n        &quot;&quot;&quot;</span>\n        cost_history <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>num_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>\n            self<span class="token punctuation">.</span>gradient_step<span class="token punctuation">(</span>alpha<span class="token punctuation">)</span>\n            cost_history<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>cost_function<span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">,</span>self<span class="token punctuation">.</span>labels<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> cost_history\n\n    <span class="token comment"># 实现小批量梯度下降法 具体步骤</span>\n    <span class="token keyword">def</span> <span class="token function">gradient_step</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>alpha<span class="token punctuation">)</span><span class="token punctuation">:</span>    \n        <span class="token triple-quoted-string string">&quot;&quot;&quot;\n                    梯度下降参数更新计算方法，注意是矩阵运算\n        &quot;&quot;&quot;</span>\n        <span class="token comment"># 样本的个数</span>\n        num_examples <span class="token operator">=</span> self<span class="token punctuation">.</span>data<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n        <span class="token comment"># 预测值 predictions = np.dot(data,theta)</span>\n        prediction <span class="token operator">=</span> LinearRegression<span class="token punctuation">.</span>hypothesis<span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">,</span>self<span class="token punctuation">.</span>theta<span class="token punctuation">)</span>\n        <span class="token comment"># 残差 = 预测值 - 真实值</span>\n        delta <span class="token operator">=</span> prediction <span class="token operator">-</span> self<span class="token punctuation">.</span>labels\n        theta <span class="token operator">=</span> self<span class="token punctuation">.</span>theta\n        <span class="token comment"># 更新theta 小批量梯度下降法</span>\n        <span class="token comment"># 公式直接带进去</span>\n        theta <span class="token operator">=</span> theta <span class="token operator">-</span> alpha<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>num_examples<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>delta<span class="token punctuation">.</span>T<span class="token punctuation">,</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>T\n        self<span class="token punctuation">.</span>theta <span class="token operator">=</span> theta\n\n    <span class="token keyword">def</span> <span class="token function">cost_function</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>data<span class="token punctuation">,</span>labels<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">&quot;&quot;&quot;\n                    损失计算方法\n        &quot;&quot;&quot;</span>\n        <span class="token comment"># 该函数会计算模型预测值和实际值之间的平均误差的平方和，然后将其除以样本数量得到平均误差值作为损失值。</span>\n        num_examples <span class="token operator">=</span> data<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n        delta <span class="token operator">=</span> LinearRegression<span class="token punctuation">.</span>hypothesis<span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">,</span>self<span class="token punctuation">.</span>theta<span class="token punctuation">)</span> <span class="token operator">-</span> labels\n        cost <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>delta<span class="token punctuation">.</span>T<span class="token punctuation">,</span>delta<span class="token punctuation">)</span><span class="token operator">/</span>num_examples\n        <span class="token keyword">return</span> cost<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n        \n\n    <span class="token decorator annotation punctuation">@staticmethod</span>\n    <span class="token keyword">def</span> <span class="token function">hypothesis</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>theta<span class="token punctuation">)</span><span class="token punctuation">:</span>   \n        predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>data<span class="token punctuation">,</span>theta<span class="token punctuation">)</span>\n        <span class="token keyword">return</span> predictions\n\n    <span class="token comment"># 得到当前的损失</span>\n    <span class="token keyword">def</span> <span class="token function">get_cost</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>data<span class="token punctuation">,</span>labels<span class="token punctuation">)</span><span class="token punctuation">:</span>  \n        data_processed <span class="token operator">=</span> prepare_for_training<span class="token punctuation">(</span>data<span class="token punctuation">,</span>\n         self<span class="token punctuation">.</span>polynomial_degree<span class="token punctuation">,</span>\n         self<span class="token punctuation">.</span>sinusoid_degree<span class="token punctuation">,</span>\n         self<span class="token punctuation">.</span>normalize_data\n         <span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n        \n        <span class="token keyword">return</span> self<span class="token punctuation">.</span>cost_function<span class="token punctuation">(</span>data_processed<span class="token punctuation">,</span>labels<span class="token punctuation">)</span>\n\n    <span class="token keyword">def</span> <span class="token function">predict</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">&quot;&quot;&quot;\n                    用训练的参数模型，与预测得到回归值结果\n        &quot;&quot;&quot;</span>\n        data_processed <span class="token operator">=</span> prepare_for_training<span class="token punctuation">(</span>data<span class="token punctuation">,</span>\n         self<span class="token punctuation">.</span>polynomial_degree<span class="token punctuation">,</span>\n         self<span class="token punctuation">.</span>sinusoid_degree<span class="token punctuation">,</span>\n         self<span class="token punctuation">.</span>normalize_data\n         <span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n         \n        predictions <span class="token operator">=</span> LinearRegression<span class="token punctuation">.</span>hypothesis<span class="token punctuation">(</span>data_processed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>theta<span class="token punctuation">)</span>\n        \n        <span class="token keyword">return</span> predictions\n</code></pre></div><h3 id="线性回归"><a class="header-anchor" href="#线性回归" aria-hidden="true">#</a> 线性回归</h3><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\n\n<span class="token keyword">from</span> linear_regression <span class="token keyword">import</span> LinearRegression\n\n<span class="token comment"># 根据gdp 去预测幸福指数</span>\ndata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;../data/world-happiness-report-2017.csv&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 得到训练和测试数据</span>\ntrain_data <span class="token operator">=</span> data<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>frac <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">)</span>\ntest_data <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>train_data<span class="token punctuation">.</span>index<span class="token punctuation">)</span>\n\ninput_param_name <span class="token operator">=</span> <span class="token string">&#39;Economy..GDP.per.Capita.&#39;</span>\noutput_param_name <span class="token operator">=</span> <span class="token string">&#39;Happiness.Score&#39;</span>\n\n<span class="token comment"># 这里要注意！传数组进去！二维矩阵</span>\nx_train <span class="token operator">=</span> train_data<span class="token punctuation">[</span><span class="token punctuation">[</span>input_param_name<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\ny_train <span class="token operator">=</span> train_data<span class="token punctuation">[</span><span class="token punctuation">[</span>output_param_name<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\n\n<span class="token comment"># 这里是一维的</span>\nx_test <span class="token operator">=</span> test_data<span class="token punctuation">[</span>input_param_name<span class="token punctuation">]</span><span class="token punctuation">.</span>values\ny_test <span class="token operator">=</span> test_data<span class="token punctuation">[</span>output_param_name<span class="token punctuation">]</span><span class="token punctuation">.</span>values\n\nplt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;Train data&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;test data&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span>input_param_name<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span>output_param_name<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Happy&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 开始训练回归模型</span>\nnum_iterations <span class="token operator">=</span> <span class="token number">500</span>\nlearning_rate <span class="token operator">=</span> <span class="token number">0.01</span>\n\nlinear_regression <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n<span class="token punctuation">(</span>theta<span class="token punctuation">,</span>cost_history<span class="token punctuation">)</span> <span class="token operator">=</span> linear_regression<span class="token punctuation">.</span>train<span class="token punctuation">(</span>learning_rate<span class="token punctuation">,</span>num_iterations<span class="token punctuation">)</span>\n<span class="token comment"># cost_history 是一个损失函数的列表</span>\n<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;开始时的损失：&#39;</span><span class="token punctuation">,</span>cost_history<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;训练后的损失：&#39;</span><span class="token punctuation">,</span>cost_history<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_iterations<span class="token punctuation">)</span><span class="token punctuation">,</span>cost_history<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Iter&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;cost&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;GD&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\npredictions_num <span class="token operator">=</span> <span class="token number">100</span>\n<span class="token comment"># 生成一个指定间隔序列 记得要变成一个二维数组 （，100）-&gt;（100,1）</span>\nx_predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>x_train<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x_train<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>predictions_num<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>predictions_num<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\ny_predictions <span class="token operator">=</span> linear_regression<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x_predictions<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;Train data&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x_test<span class="token punctuation">,</span>y_test<span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;test data&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x_predictions<span class="token punctuation">,</span>y_predictions<span class="token punctuation">,</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;Prediction&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span>input_param_name<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span>output_param_name<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Happy&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="多特征回归模型"><a class="header-anchor" href="#多特征回归模型" aria-hidden="true">#</a> 多特征回归模型</h3><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\n<span class="token keyword">import</span> plotly\n<span class="token keyword">import</span> plotly<span class="token punctuation">.</span>graph_objs <span class="token keyword">as</span> go\n\nplotly<span class="token punctuation">.</span>offline<span class="token punctuation">.</span>init_notebook_mode<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">from</span> linear_regression <span class="token keyword">import</span> LinearRegression\n<span class="token comment"># 多特征回归模型</span>\n\ndata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;../data/world-happiness-report-2017.csv&#39;</span><span class="token punctuation">)</span>\n\ntrain_data <span class="token operator">=</span> data<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>frac<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>\ntest_data <span class="token operator">=</span> data<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>train_data<span class="token punctuation">.</span>index<span class="token punctuation">)</span>\n\ninput_param_name_1 <span class="token operator">=</span> <span class="token string">&#39;Economy..GDP.per.Capita.&#39;</span>\ninput_param_name_2 <span class="token operator">=</span> <span class="token string">&#39;Freedom&#39;</span>\noutput_param_name <span class="token operator">=</span> <span class="token string">&#39;Happiness.Score&#39;</span>\n\nx_train <span class="token operator">=</span> train_data<span class="token punctuation">[</span><span class="token punctuation">[</span>input_param_name_1<span class="token punctuation">,</span> input_param_name_2<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\ny_train <span class="token operator">=</span> train_data<span class="token punctuation">[</span><span class="token punctuation">[</span>output_param_name<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\n\nx_test <span class="token operator">=</span> test_data<span class="token punctuation">[</span><span class="token punctuation">[</span>input_param_name_1<span class="token punctuation">,</span> input_param_name_2<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\ny_test <span class="token operator">=</span> test_data<span class="token punctuation">[</span><span class="token punctuation">[</span>output_param_name<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\n\n<span class="token comment"># Configure the plot with training dataset.</span>\nplot_training_trace <span class="token operator">=</span> go<span class="token punctuation">.</span>Scatter3d<span class="token punctuation">(</span>\n    x<span class="token operator">=</span>x_train<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    y<span class="token operator">=</span>x_train<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    z<span class="token operator">=</span>y_train<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token operator">=</span><span class="token string">&#39;Training Set&#39;</span><span class="token punctuation">,</span>\n    mode<span class="token operator">=</span><span class="token string">&#39;markers&#39;</span><span class="token punctuation">,</span>\n    marker<span class="token operator">=</span><span class="token punctuation">{</span>\n        <span class="token string">&#39;size&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;opacity&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;line&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">&#39;color&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rgb(255, 255, 255)&#39;</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;width&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n\nplot_test_trace <span class="token operator">=</span> go<span class="token punctuation">.</span>Scatter3d<span class="token punctuation">(</span>\n    x<span class="token operator">=</span>x_test<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    y<span class="token operator">=</span>x_test<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    z<span class="token operator">=</span>y_test<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token operator">=</span><span class="token string">&#39;Test Set&#39;</span><span class="token punctuation">,</span>\n    mode<span class="token operator">=</span><span class="token string">&#39;markers&#39;</span><span class="token punctuation">,</span>\n    marker<span class="token operator">=</span><span class="token punctuation">{</span>\n        <span class="token string">&#39;size&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;opacity&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;line&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token string">&#39;color&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;rgb(255, 255, 255)&#39;</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;width&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n\nplot_layout <span class="token operator">=</span> go<span class="token punctuation">.</span>Layout<span class="token punctuation">(</span>\n    title<span class="token operator">=</span><span class="token string">&#39;Date Sets&#39;</span><span class="token punctuation">,</span>\n    scene<span class="token operator">=</span><span class="token punctuation">{</span>\n        <span class="token string">&#39;xaxis&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> input_param_name_1<span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;yaxis&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> input_param_name_2<span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;zaxis&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> output_param_name<span class="token punctuation">}</span> \n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    margin<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;t&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n\nplot_data <span class="token operator">=</span> <span class="token punctuation">[</span>plot_training_trace<span class="token punctuation">,</span> plot_test_trace<span class="token punctuation">]</span>\n\nplot_figure <span class="token operator">=</span> go<span class="token punctuation">.</span>Figure<span class="token punctuation">(</span>data<span class="token operator">=</span>plot_data<span class="token punctuation">,</span> layout<span class="token operator">=</span>plot_layout<span class="token punctuation">)</span>\n\nplotly<span class="token punctuation">.</span>offline<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>plot_figure<span class="token punctuation">)</span> <span class="token comment"># 如果要用jupter 改成plotly.offline.iplot</span>\n\nnum_iterations <span class="token operator">=</span> <span class="token number">500</span>  \nlearning_rate <span class="token operator">=</span> <span class="token number">0.01</span>  \npolynomial_degree <span class="token operator">=</span> <span class="token number">0</span>  \nsinusoid_degree <span class="token operator">=</span> <span class="token number">0</span>  \n\nlinear_regression <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> polynomial_degree<span class="token punctuation">,</span> sinusoid_degree<span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span>theta<span class="token punctuation">,</span> cost_history<span class="token punctuation">)</span> <span class="token operator">=</span> linear_regression<span class="token punctuation">.</span>train<span class="token punctuation">(</span>\n    learning_rate<span class="token punctuation">,</span>\n    num_iterations\n<span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;开始损失&#39;</span><span class="token punctuation">,</span>cost_history<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;结束损失&#39;</span><span class="token punctuation">,</span>cost_history<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_iterations<span class="token punctuation">)</span><span class="token punctuation">,</span> cost_history<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Iterations&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Cost&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Gradient Descent Progress&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\npredictions_num <span class="token operator">=</span> <span class="token number">10</span>\n\nx_min <span class="token operator">=</span> x_train<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nx_max <span class="token operator">=</span> x_train<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\ny_min <span class="token operator">=</span> x_train<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ny_max <span class="token operator">=</span> x_train<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\nx_axis <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>x_min<span class="token punctuation">,</span> x_max<span class="token punctuation">,</span> predictions_num<span class="token punctuation">)</span>\ny_axis <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>y_min<span class="token punctuation">,</span> y_max<span class="token punctuation">,</span> predictions_num<span class="token punctuation">)</span>\n\n\nx_predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>predictions_num <span class="token operator">*</span> predictions_num<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\ny_predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>predictions_num <span class="token operator">*</span> predictions_num<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nx_y_index <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">for</span> x_index<span class="token punctuation">,</span> x_value <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>x_axis<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">for</span> y_index<span class="token punctuation">,</span> y_value <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>y_axis<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        x_predictions<span class="token punctuation">[</span>x_y_index<span class="token punctuation">]</span> <span class="token operator">=</span> x_value\n        y_predictions<span class="token punctuation">[</span>x_y_index<span class="token punctuation">]</span> <span class="token operator">=</span> y_value\n        x_y_index <span class="token operator">+=</span> <span class="token number">1</span>\n\nz_predictions <span class="token operator">=</span> linear_regression<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>x_predictions<span class="token punctuation">,</span> y_predictions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nplot_predictions_trace <span class="token operator">=</span> go<span class="token punctuation">.</span>Scatter3d<span class="token punctuation">(</span>\n    x<span class="token operator">=</span>x_predictions<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    y<span class="token operator">=</span>y_predictions<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    z<span class="token operator">=</span>z_predictions<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    name<span class="token operator">=</span><span class="token string">&#39;Prediction Plane&#39;</span><span class="token punctuation">,</span>\n    mode<span class="token operator">=</span><span class="token string">&#39;markers&#39;</span><span class="token punctuation">,</span>\n    marker<span class="token operator">=</span><span class="token punctuation">{</span>\n        <span class="token string">&#39;size&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    opacity<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>\n    surfaceaxis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> \n<span class="token punctuation">)</span>\n\nplot_data <span class="token operator">=</span> <span class="token punctuation">[</span>plot_training_trace<span class="token punctuation">,</span> plot_test_trace<span class="token punctuation">,</span> plot_predictions_trace<span class="token punctuation">]</span>\nplot_figure <span class="token operator">=</span> go<span class="token punctuation">.</span>Figure<span class="token punctuation">(</span>data<span class="token operator">=</span>plot_data<span class="token punctuation">,</span> layout<span class="token operator">=</span>plot_layout<span class="token punctuation">)</span>\nplotly<span class="token punctuation">.</span>offline<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>plot_figure<span class="token punctuation">)</span>\n</code></pre></div><h3 id="非线性回归"><a class="header-anchor" href="#非线性回归" aria-hidden="true">#</a> 非线性回归</h3><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\n\n<span class="token keyword">from</span> linear_regression <span class="token keyword">import</span> LinearRegression\n\n<span class="token comment"># 非线性回归</span>\ndata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;../data/non-linear-regression-x-y.csv&#39;</span><span class="token punctuation">)</span>\n\nx <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\ny <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\ndata<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nnum_iterations <span class="token operator">=</span> <span class="token number">50000</span>  \nlearning_rate <span class="token operator">=</span> <span class="token number">0.02</span>\n<span class="token comment"># 特征变换</span>\npolynomial_degree <span class="token operator">=</span> <span class="token number">15</span>\nsinusoid_degree <span class="token operator">=</span> <span class="token number">15</span>\nnormalize_data <span class="token operator">=</span> <span class="token boolean">True</span>  \n\nlinear_regression <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> polynomial_degree<span class="token punctuation">,</span> sinusoid_degree<span class="token punctuation">,</span> normalize_data<span class="token punctuation">)</span>\n\n<span class="token punctuation">(</span>theta<span class="token punctuation">,</span> cost_history<span class="token punctuation">)</span> <span class="token operator">=</span> linear_regression<span class="token punctuation">.</span>train<span class="token punctuation">(</span>\n    learning_rate<span class="token punctuation">,</span>\n    num_iterations\n<span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;开始损失: {:.2f}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cost_history<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;结束损失: {:.2f}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cost_history<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\ntheta_table <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;Model Parameters&#39;</span><span class="token punctuation">:</span> theta<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_iterations<span class="token punctuation">)</span><span class="token punctuation">,</span> cost_history<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Iterations&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Cost&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Gradient Descent Progress&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\npredictions_num <span class="token operator">=</span> <span class="token number">1000</span>\nx_predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> predictions_num<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>predictions_num<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ny_predictions <span class="token operator">=</span> linear_regression<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x_predictions<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Training Dataset&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x_predictions<span class="token punctuation">,</span> y_predictions<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Prediction&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="_3-模型评估方法"><a class="header-anchor" href="#_3-模型评估方法" aria-hidden="true">#</a> 3. 模型评估方法</h2><h3 id="数据集切分"><a class="header-anchor" href="#数据集切分" aria-hidden="true">#</a> 数据集切分</h3><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> os\n<span class="token operator">%</span>matplotlib inline\n<span class="token keyword">import</span> matplotlib\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;axes.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;xtick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;ytick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\n<span class="token keyword">import</span> warnings\nwarnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span>\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\n\n<span class="token comment"># Mnist数据是图像数据：(28,28,1)的灰度图</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> fetch_mldata\nmnist <span class="token operator">=</span> fetch_mldata<span class="token punctuation">(</span><span class="token string">&#39;MNIST original&#39;</span><span class="token punctuation">)</span>\nmnist\n\n\nX<span class="token punctuation">.</span>shape\nX<span class="token punctuation">,</span> y <span class="token operator">=</span> mnist<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mnist<span class="token punctuation">[</span><span class="token string">&quot;target&quot;</span><span class="token punctuation">]</span>\nX<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">70000</span><span class="token punctuation">,</span> <span class="token number">784</span><span class="token punctuation">)</span>\ny<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">70000</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code>X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">60000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token number">60000</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">60000</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token number">60000</span><span class="token punctuation">:</span><span class="token punctuation">]</span>\n\n<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token comment"># 洗牌操作</span>\nshuffle_index <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">)</span>\nX_train<span class="token punctuation">,</span> y_train <span class="token operator">=</span> X_train<span class="token punctuation">[</span>shuffle_index<span class="token punctuation">]</span><span class="token punctuation">,</span> y_train<span class="token punctuation">[</span>shuffle_index<span class="token punctuation">]</span>\n</code></pre></div><h3 id="交叉验证"><a class="header-anchor" href="#交叉验证" aria-hidden="true">#</a> 交叉验证</h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B01.png" alt=""></p><div class="language-python"><pre><code>y_train_5 <span class="token operator">=</span> <span class="token punctuation">(</span>y_train<span class="token operator">==</span><span class="token number">5</span><span class="token punctuation">)</span>\ny_test_5 <span class="token operator">=</span> <span class="token punctuation">(</span>y_test<span class="token operator">==</span><span class="token number">5</span><span class="token punctuation">)</span>\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> SGDClassifier\nsgd_clf <span class="token operator">=</span> SGDClassifier<span class="token punctuation">(</span>max_iter<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nsgd_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train_5<span class="token punctuation">)</span>\n\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> cross_val_score\ncross_val_score<span class="token punctuation">(</span>sgd_clf<span class="token punctuation">,</span>X_train<span class="token punctuation">,</span>y_train_5<span class="token punctuation">,</span>cv<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>scoring<span class="token operator">=</span><span class="token string">&#39;accuracy&#39;</span><span class="token punctuation">)</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.9502</span> <span class="token punctuation">,</span> <span class="token number">0.96565</span><span class="token punctuation">,</span> <span class="token number">0.96495</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nX_train<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">,</span> <span class="token number">784</span><span class="token punctuation">)</span>\ny_train_5<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">60000</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> StratifiedKFold\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>base <span class="token keyword">import</span> clone\n​\nskflods <span class="token operator">=</span> StratifiedKFold<span class="token punctuation">(</span>n_splits<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> train_index<span class="token punctuation">,</span>test_index <span class="token keyword">in</span> skflods<span class="token punctuation">.</span>split<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train_5<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    clone_clf <span class="token operator">=</span> clone<span class="token punctuation">(</span>sgd_clf<span class="token punctuation">)</span>\n    X_train_folds <span class="token operator">=</span> X_train<span class="token punctuation">[</span>train_index<span class="token punctuation">]</span>\n    y_train_folds <span class="token operator">=</span> y_train_5<span class="token punctuation">[</span>train_index<span class="token punctuation">]</span>\n    X_test_folds <span class="token operator">=</span> X_train<span class="token punctuation">[</span>test_index<span class="token punctuation">]</span>\n    y_test_folds <span class="token operator">=</span> y_train_5<span class="token punctuation">[</span>test_index<span class="token punctuation">]</span>\n    \n    clone_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train_folds<span class="token punctuation">,</span>y_train_folds<span class="token punctuation">)</span>\n    y_pred <span class="token operator">=</span> clone_clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test_folds<span class="token punctuation">)</span>\n    n_correct <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>y_pred <span class="token operator">==</span> y_test_folds<span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>n_correct<span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>y_pred<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token number">0.9502</span>\n<span class="token number">0.96565</span>\n<span class="token number">0.96495</span>\n</code></pre></div><h3 id="混淆矩阵"><a class="header-anchor" href="#混淆矩阵" aria-hidden="true">#</a> 混淆矩阵</h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B02.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> cross_val_predict\ny_train_pred <span class="token operator">=</span> cross_val_predict<span class="token punctuation">(</span>sgd_clf<span class="token punctuation">,</span>X_train<span class="token punctuation">,</span>y_train_5<span class="token punctuation">,</span>cv<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>\n\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> confusion_matrix\nconfusion_matrix<span class="token punctuation">(</span>y_train_5<span class="token punctuation">,</span>y_train_pred<span class="token punctuation">)</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">53272</span><span class="token punctuation">,</span>  <span class="token number">1307</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span> <span class="token number">1077</span><span class="token punctuation">,</span>  <span class="token number">4344</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>int64<span class="token punctuation">)</span>\n</code></pre></div><div class="language-"><pre><code>negative class [[ true negatives , false positives ],\npositive class [ false negatives , true positives ]]\n\ntrue negatives: 53,272个数据被正确的分为非5类别\nfalse positives：1307张被错误的分为5类别\nfalse negatives：1077张错误的分为非5类别\ntrue positives： 4344张被正确的分为5类别\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># 准确率： TP/(TP+FP)</span>\n<span class="token comment"># 召回率： TP/(TP+FN)</span>\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> precision_score<span class="token punctuation">,</span>recall_score\nprecision_score<span class="token punctuation">(</span>y_train_5<span class="token punctuation">,</span>y_train_pred<span class="token punctuation">)</span>\n<span class="token number">0.7687135020350381</span>\n\nrecall_score<span class="token punctuation">(</span>y_train_5<span class="token punctuation">,</span>y_train_pred<span class="token punctuation">)</span>\n<span class="token number">0.801328168234643</span>\n\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> f1_score\nf1_score<span class="token punctuation">(</span>y_train_5<span class="token punctuation">,</span>y_train_pred<span class="token punctuation">)</span>\n<span class="token number">0.7846820809248555</span>\n</code></pre></div><h3 id="评估指标对比分析"><a class="header-anchor" href="#评估指标对比分析" aria-hidden="true">#</a> 评估指标对比分析</h3><h3 id="阈值对结果的影响"><a class="header-anchor" href="#阈值对结果的影响" aria-hidden="true">#</a> 阈值对结果的影响</h3><div class="language-PYTHON"><pre><code>Scikit<span class="token operator">-</span>Learn不允许直接设置阈值，但它可以得到决策分数，调用其decision_function（）方法，而不是调用分类器的predict（）方法，该方法返回每个实例的分数，然后使用想要的阈值根据这些分数进行预测\n\ny_scores <span class="token operator">=</span> cross_val_predict<span class="token punctuation">(</span>sgd_clf<span class="token punctuation">,</span> X_train<span class="token punctuation">,</span> y_train_5<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>\n                             method<span class="token operator">=</span><span class="token string">&quot;decision_function&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> precision_recall_curve\nprecisions<span class="token punctuation">,</span> recalls<span class="token punctuation">,</span> thresholds <span class="token operator">=</span> precision_recall_curve<span class="token punctuation">(</span>y_train_5<span class="token punctuation">,</span> y_scores<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_precision_recall_vs_threshold</span><span class="token punctuation">(</span>precisions<span class="token punctuation">,</span>recalls<span class="token punctuation">,</span>thresholds<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>thresholds<span class="token punctuation">,</span>\n             precisions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;b--&quot;</span><span class="token punctuation">,</span>\n            label<span class="token operator">=</span><span class="token string">&quot;Precision&quot;</span><span class="token punctuation">)</span>\n    \n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>thresholds<span class="token punctuation">,</span>\n             recalls<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token string">&quot;g-&quot;</span><span class="token punctuation">,</span>\n            label<span class="token operator">=</span><span class="token string">&quot;Recall&quot;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;Threshold&quot;</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;upper left&quot;</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    \nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplot_precision_recall_vs_threshold<span class="token punctuation">(</span>precisions<span class="token punctuation">,</span>recalls<span class="token punctuation">,</span>thresholds<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">700000</span><span class="token punctuation">,</span> <span class="token number">700000</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B03.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">def</span> <span class="token function">plot_precision_vs_recall</span><span class="token punctuation">(</span>precisions<span class="token punctuation">,</span> recalls<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>recalls<span class="token punctuation">,</span> \n             precisions<span class="token punctuation">,</span> \n             <span class="token string">&quot;b-&quot;</span><span class="token punctuation">,</span> \n             linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\n    \n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;Recall&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;Precision&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplot_precision_vs_recall<span class="token punctuation">(</span>precisions<span class="token punctuation">,</span> recalls<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B04.png" alt=""></p><h3 id="roc曲线"><a class="header-anchor" href="#roc曲线" aria-hidden="true">#</a> ROC曲线</h3><div class="language-"><pre><code>receiver operating characteristic (ROC) 曲线是二元分类中的常用评估方法\n\n它与精确度/召回曲线非常相似，但ROC曲线不是绘制精确度与召回率，而是绘制true positive rate(TPR) 与false positive rate(FPR)\n\n要绘制ROC曲线，首先需要使用roc_curve（）函数计算各种阈值的TPR和FPR：\n\nTPR = TP / (TP + FN) (Recall)\nFPR = FP / (FP + TN)\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> roc_curve\nfpr<span class="token punctuation">,</span> tpr<span class="token punctuation">,</span> thresholds <span class="token operator">=</span> roc_curve<span class="token punctuation">(</span>y_train_5<span class="token punctuation">,</span> y_scores<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_roc_curve</span><span class="token punctuation">(</span>fpr<span class="token punctuation">,</span> tpr<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>fpr<span class="token punctuation">,</span> tpr<span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span>label<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;k--&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;False Positive Rate&#39;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;True Positive Rate&#39;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplot_roc_curve<span class="token punctuation">(</span>fpr<span class="token punctuation">,</span> tpr<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B05.png" alt=""></p><div class="language-"><pre><code>虚线表示纯随机分类器的ROC曲线; 一个好的分类器尽可能远离该线（朝左上角）。\n\n比较分类器的一种方法是测量曲线下面积（AUC）。完美分类器的ROC AUC等于1，而纯随机分类器的ROC AUC等于0.5。 Scikit-Learn提供了计算ROC AUC的函数：\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> roc_auc_score\nroc_auc_score<span class="token punctuation">(</span>y_train_5<span class="token punctuation">,</span> y_scores<span class="token punctuation">)</span>\n<span class="token number">0.9624496555967156</span>\n</code></pre></div><h2 id="_4-线性回归实验分析"><a class="header-anchor" href="#_4-线性回归实验分析" aria-hidden="true">#</a> 4. 线性回归实验分析</h2><h3 id="回归方程"><a class="header-anchor" href="#回归方程" aria-hidden="true">#</a> 回归方程</h3><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\nX <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\ny <span class="token operator">=</span> <span class="token number">4</span><span class="token operator">+</span> <span class="token number">3</span><span class="token operator">*</span>X <span class="token operator">+</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n\nX_b <span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>X<span class="token punctuation">]</span>\n<span class="token comment"># array([[1.        , 0.74908024],</span>\n\n<span class="token comment"># linalg.inv 1求逆</span>\ntheta_best <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>X_b<span class="token punctuation">.</span>T<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_b<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">.</span>dot<span class="token punctuation">(</span>y<span class="token punctuation">)</span>\ntheta_best\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4.21509616</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">2.77011339</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nX_new <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nX_new_b <span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>X_new<span class="token punctuation">]</span>\ny_predict <span class="token operator">=</span> X_new_b<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>theta_best<span class="token punctuation">)</span>\ny_predict\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4.21509616</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">9.75532293</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="梯度下降"><a class="header-anchor" href="#梯度下降" aria-hidden="true">#</a> 梯度下降</h3><h4 id="批量梯度下降计算公式"><a class="header-anchor" href="#批量梯度下降计算公式" aria-hidden="true">#</a> 批量梯度下降计算公式</h4><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%902.png" alt=""></p><div class="language-python"><pre><code>eta <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token comment"># 学习率</span>\nn_iterations <span class="token operator">=</span> <span class="token number">1000</span>\nm <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment"># 样本个数</span>\ntheta <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> iteration <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    gradients <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">/</span>m<span class="token operator">*</span> X_b<span class="token punctuation">.</span>T<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_b<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token operator">-</span>y<span class="token punctuation">)</span>\n    theta <span class="token operator">=</span> theta <span class="token operator">-</span> eta<span class="token operator">*</span>gradients\n\n\ntheta\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4.21509616</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">2.77011339</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\ntheta_path_bgd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token keyword">def</span> <span class="token function">plot_gradient_descent</span><span class="token punctuation">(</span>theta<span class="token punctuation">,</span>eta<span class="token punctuation">,</span>theta_path <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    m <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>X_b<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;b.&#39;</span><span class="token punctuation">)</span>\n    n_iterations <span class="token operator">=</span> <span class="token number">1000</span>\n    <span class="token keyword">for</span> iteration <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n_iterations<span class="token punctuation">)</span><span class="token punctuation">:</span> \n        y_predict <span class="token operator">=</span> X_new_b<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>theta<span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>y_predict<span class="token punctuation">,</span><span class="token string">&#39;b-&#39;</span><span class="token punctuation">)</span>\n        gradients <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">/</span>m<span class="token operator">*</span> X_b<span class="token punctuation">.</span>T<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_b<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token operator">-</span>y<span class="token punctuation">)</span>\n        theta <span class="token operator">=</span> theta <span class="token operator">-</span> eta<span class="token operator">*</span>gradients\n        <span class="token keyword">if</span> theta_path <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n            theta_path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>theta<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;X_1&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;eta = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>eta<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\ntheta <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span>\nplot_gradient_descent<span class="token punctuation">(</span>theta<span class="token punctuation">,</span>eta <span class="token operator">=</span> <span class="token number">0.02</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">)</span>\nplot_gradient_descent<span class="token punctuation">(</span>theta<span class="token punctuation">,</span>eta <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">,</span>theta_path<span class="token operator">=</span>theta_path_bgd<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">133</span><span class="token punctuation">)</span>\nplot_gradient_descent<span class="token punctuation">(</span>theta<span class="token punctuation">,</span>eta <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%903.png" alt=""></p><h4 id="随机梯度下降"><a class="header-anchor" href="#随机梯度下降" aria-hidden="true">#</a> 随机梯度下降</h4><div class="language-python"><pre><code>theta_path_sgd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\nm <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>X_b<span class="token punctuation">)</span>\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\nn_epochs <span class="token operator">=</span> <span class="token number">50</span>\n\nt0 <span class="token operator">=</span> <span class="token number">5</span>\nt1 <span class="token operator">=</span> <span class="token number">50</span>\n\n<span class="token keyword">def</span> <span class="token function">learning_schedule</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> t0<span class="token operator">/</span><span class="token punctuation">(</span>t1<span class="token operator">+</span>t<span class="token punctuation">)</span>\n\ntheta <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n_epochs<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">if</span> epoch <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token keyword">and</span> i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">:</span>\n            y_predict <span class="token operator">=</span> X_new_b<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>theta<span class="token punctuation">)</span>\n            plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>y_predict<span class="token punctuation">,</span><span class="token string">&#39;r-&#39;</span><span class="token punctuation">)</span>\n        random_index <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>m<span class="token punctuation">)</span>\n        xi <span class="token operator">=</span> X_b<span class="token punctuation">[</span>random_index<span class="token punctuation">:</span>random_index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>\n        yi <span class="token operator">=</span> y<span class="token punctuation">[</span>random_index<span class="token punctuation">:</span>random_index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>\n        gradients <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span> xi<span class="token punctuation">.</span>T<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>xi<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token operator">-</span>yi<span class="token punctuation">)</span>\n        eta <span class="token operator">=</span> learning_schedule<span class="token punctuation">(</span>epoch<span class="token operator">*</span>m<span class="token operator">+</span>i<span class="token punctuation">)</span>\n        theta <span class="token operator">=</span> theta<span class="token operator">-</span>eta<span class="token operator">*</span>gradients\n        theta_path_sgd<span class="token punctuation">.</span>append<span class="token punctuation">(</span>theta<span class="token punctuation">)</span>\n        \nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;b.&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   \nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%904.png" alt=""></p><h4 id="minibatch梯度下降"><a class="header-anchor" href="#minibatch梯度下降" aria-hidden="true">#</a> MiniBatch梯度下降</h4><div class="language-python"><pre><code>theta_path_mgd<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\nn_epochs <span class="token operator">=</span> <span class="token number">50</span>\nminibatch <span class="token operator">=</span> <span class="token number">16</span>\ntheta <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\nt0<span class="token punctuation">,</span> t1 <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">1000</span>\n<span class="token keyword">def</span> <span class="token function">learning_schedule</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> t0 <span class="token operator">/</span> <span class="token punctuation">(</span>t <span class="token operator">+</span> t1<span class="token punctuation">)</span>\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\nt <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n_epochs<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    shuffled_indices <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span>m<span class="token punctuation">)</span>\n    X_b_shuffled <span class="token operator">=</span> X_b<span class="token punctuation">[</span>shuffled_indices<span class="token punctuation">]</span>\n    y_shuffled <span class="token operator">=</span> y<span class="token punctuation">[</span>shuffled_indices<span class="token punctuation">]</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>m<span class="token punctuation">,</span>minibatch<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        t<span class="token operator">+=</span><span class="token number">1</span>\n        xi <span class="token operator">=</span> X_b_shuffled<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>minibatch<span class="token punctuation">]</span>\n        yi <span class="token operator">=</span> y_shuffled<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>minibatch<span class="token punctuation">]</span>\n        gradients <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">/</span>minibatch<span class="token operator">*</span> xi<span class="token punctuation">.</span>T<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>xi<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>theta<span class="token punctuation">)</span><span class="token operator">-</span>yi<span class="token punctuation">)</span>\n        eta <span class="token operator">=</span> learning_schedule<span class="token punctuation">(</span>t<span class="token punctuation">)</span>\n        theta <span class="token operator">=</span> theta<span class="token operator">-</span>eta<span class="token operator">*</span>gradients\n        theta_path_mgd<span class="token punctuation">.</span>append<span class="token punctuation">(</span>theta<span class="token punctuation">)</span>\ntheta\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4.25490684</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">2.80388785</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><h4 id="_3种策略的对比实验"><a class="header-anchor" href="#_3种策略的对比实验" aria-hidden="true">#</a> 3种策略的对比实验</h4><div class="language-python"><pre><code><span class="token comment"># 实际当中用minibatch比较多，一般情况下选择batch数量应当越大越好。</span>\n<span class="token comment"># 批量梯度下降</span>\ntheta_path_bgd <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>theta_path_bgd<span class="token punctuation">)</span>\n<span class="token comment"># 随机梯度下降</span>\ntheta_path_sgd <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>theta_path_sgd<span class="token punctuation">)</span>\n<span class="token comment"># MiniBatch梯度下降</span>\ntheta_path_mgd <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>theta_path_mgd<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>theta_path_sgd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>theta_path_sgd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;r-s&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;SGD&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>theta_path_mgd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>theta_path_mgd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;g-+&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;MINIGD&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>theta_path_bgd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>theta_path_bgd<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;b-o&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;BGD&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;upper left&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token number">4.5</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%905.png" alt=""></p><h3 id="多项式回归"><a class="header-anchor" href="#多项式回归" aria-hidden="true">#</a> 多项式回归</h3><div class="language-python"><pre><code>m <span class="token operator">=</span> <span class="token number">100</span>\nX <span class="token operator">=</span> <span class="token number">6</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">3</span>\ny <span class="token operator">=</span> <span class="token number">0.5</span><span class="token operator">*</span>X<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span>X<span class="token operator">+</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> PolynomialFeatures\npoly_features <span class="token operator">=</span> PolynomialFeatures<span class="token punctuation">(</span>degree <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>include_bias <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>\nX_poly <span class="token operator">=</span> poly_features<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n\nX_poly<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.82919615</span><span class="token punctuation">,</span> <span class="token number">8.00435083</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># x x^2</span>\n\n\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegression\nlin_reg <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>\nlin_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_poly<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n<span class="token keyword">print</span> <span class="token punctuation">(</span>lin_reg<span class="token punctuation">.</span>coef_<span class="token punctuation">)</span>\n<span class="token keyword">print</span> <span class="token punctuation">(</span>lin_reg<span class="token punctuation">.</span>intercept_<span class="token punctuation">)</span>\n<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.10879671</span> <span class="token number">0.53435287</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.03765461</span><span class="token punctuation">]</span>\n\nX_new <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\nX_new_poly <span class="token operator">=</span> poly_features<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\ny_new <span class="token operator">=</span> lin_reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new_poly<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;b.&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>y_new<span class="token punctuation">,</span><span class="token string">&#39;r--&#39;</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">&#39;prediction&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%906.png" alt=""></p><div class="language-python"><pre><code><span class="token comment"># 特征变换的越复杂，得到的结果过拟合风险越高，不建议做的特别复杂。</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>pipeline <span class="token keyword">import</span> Pipeline\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> style<span class="token punctuation">,</span>width<span class="token punctuation">,</span>degree <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;g-&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;b--&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;r-+&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    poly_features <span class="token operator">=</span> PolynomialFeatures<span class="token punctuation">(</span>degree <span class="token operator">=</span> degree<span class="token punctuation">,</span>include_bias <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>\n    std <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    lin_reg <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    polynomial_reg <span class="token operator">=</span> Pipeline<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;poly_features&#39;</span><span class="token punctuation">,</span>poly_features<span class="token punctuation">)</span><span class="token punctuation">,</span>\n             <span class="token punctuation">(</span><span class="token string">&#39;StandardScaler&#39;</span><span class="token punctuation">,</span>std<span class="token punctuation">)</span><span class="token punctuation">,</span>\n             <span class="token punctuation">(</span><span class="token string">&#39;lin_reg&#39;</span><span class="token punctuation">,</span>lin_reg<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    polynomial_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n    y_new_2 <span class="token operator">=</span> polynomial_reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>y_new_2<span class="token punctuation">,</span>style<span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;degree   &#39;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">,</span>linewidth <span class="token operator">=</span> width<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;b.&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%907.png" alt=""></p><h3 id="数据样本数量对结果的影响"><a class="header-anchor" href="#数据样本数量对结果的影响" aria-hidden="true">#</a> 数据样本数量对结果的影响</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_squared_error\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split\n\n<span class="token keyword">def</span> <span class="token function">plot_learning_curves</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    X_train<span class="token punctuation">,</span> X_val<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_val <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>test_size <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>\n    train_errors<span class="token punctuation">,</span>val_errors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>X_train<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">[</span><span class="token punctuation">:</span>m<span class="token punctuation">]</span><span class="token punctuation">,</span>y_train<span class="token punctuation">[</span><span class="token punctuation">:</span>m<span class="token punctuation">]</span><span class="token punctuation">)</span>\n        y_train_predict <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_train<span class="token punctuation">[</span><span class="token punctuation">:</span>m<span class="token punctuation">]</span><span class="token punctuation">)</span>\n        y_val_predict <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_val<span class="token punctuation">)</span>\n        train_errors<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean_squared_error<span class="token punctuation">(</span>y_train<span class="token punctuation">[</span><span class="token punctuation">:</span>m<span class="token punctuation">]</span><span class="token punctuation">,</span>y_train_predict<span class="token punctuation">[</span><span class="token punctuation">:</span>m<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        val_errors<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean_squared_error<span class="token punctuation">(</span>y_val<span class="token punctuation">,</span>y_val_predict<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>train_errors<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;r-+&#39;</span><span class="token punctuation">,</span>linewidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;train_error&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>val_errors<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;b-&#39;</span><span class="token punctuation">,</span>linewidth <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;val_error&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Trainsing set size&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;RMSE&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    \n<span class="token comment"># 数据量越少，训练集的效果会越好，但是实际测试效果很一般。实际做模型的时候需要参考测试集和验证集的效果。</span>\nlin_reg <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplot_learning_curves<span class="token punctuation">(</span>lin_reg<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%908.png" alt=""></p><h3 id="多项式回归的过拟合风险"><a class="header-anchor" href="#多项式回归的过拟合风险" aria-hidden="true">#</a> 多项式回归的过拟合风险</h3><div class="language-python"><pre><code><span class="token comment"># 越复杂 越拟合</span>\npolynomial_reg <span class="token operator">=</span> Pipeline<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;poly_features&#39;</span><span class="token punctuation">,</span>PolynomialFeatures<span class="token punctuation">(</span>degree <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span>include_bias <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n             <span class="token punctuation">(</span><span class="token string">&#39;lin_reg&#39;</span><span class="token punctuation">,</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplot_learning_curves<span class="token punctuation">(</span>polynomial_reg<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%909.png" alt=""></p><h3 id="正则化"><a class="header-anchor" href="#正则化" aria-hidden="true">#</a> 正则化</h3><p>对权重参数进行惩罚，让权重参数尽可能平滑一些，有两种不同的方法来进行正则化惩罚:</p><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%9010.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> Ridge\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\nm <span class="token operator">=</span> <span class="token number">20</span>\nX <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\ny <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> X <span class="token operator">+</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1.5</span> <span class="token operator">+</span><span class="token number">1</span>\nX_new <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_model</span><span class="token punctuation">(</span>model_calss<span class="token punctuation">,</span>polynomial<span class="token punctuation">,</span>alphas<span class="token punctuation">,</span><span class="token operator">**</span>model_kargs<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">for</span> alpha<span class="token punctuation">,</span>style <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>alphas<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;b-&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;g--&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;r:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        model <span class="token operator">=</span> model_calss<span class="token punctuation">(</span>alpha<span class="token punctuation">,</span><span class="token operator">**</span>model_kargs<span class="token punctuation">)</span>\n        <span class="token keyword">if</span> polynomial<span class="token punctuation">:</span>\n            model <span class="token operator">=</span> Pipeline<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;poly_features&#39;</span><span class="token punctuation">,</span>PolynomialFeatures<span class="token punctuation">(</span>degree <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>include_bias <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n             <span class="token punctuation">(</span><span class="token string">&#39;StandardScaler&#39;</span><span class="token punctuation">,</span>StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n             <span class="token punctuation">(</span><span class="token string">&#39;lin_reg&#39;</span><span class="token punctuation">,</span>model<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n        y_new_regul <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\n        lw <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">if</span> alpha <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">1</span>\n        plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>y_new_regul<span class="token punctuation">,</span>style<span class="token punctuation">,</span>linewidth <span class="token operator">=</span> lw<span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;alpha = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">&#39;b.&#39;</span><span class="token punctuation">,</span>linewidth <span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>\n \nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_model<span class="token punctuation">(</span>Ridge<span class="token punctuation">,</span>polynomial<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>alphas <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_model<span class="token punctuation">(</span>Ridge<span class="token punctuation">,</span>polynomial<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>alphas <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token operator">**</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%9011.png" alt=""></p><p>惩罚力度越大，alpha值越大的时候，得到的决策方程越平稳。</p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> Lasso\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_model<span class="token punctuation">(</span>Lasso<span class="token punctuation">,</span>polynomial<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>alphas <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_model<span class="token punctuation">(</span>Lasso<span class="token punctuation">,</span>polynomial<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>alphas <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token operator">**</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%9012.png" alt=""></p><h2 id="_5-逻辑回归"><a class="header-anchor" href="#_5-逻辑回归" aria-hidden="true">#</a> 5. 逻辑回归</h2><h2 id="_6-逻辑回归代码实现"><a class="header-anchor" href="#_6-逻辑回归代码实现" aria-hidden="true">#</a> 6. 逻辑回归代码实现</h2><h2 id="_7-逻辑回归实验分析"><a class="header-anchor" href="#_7-逻辑回归实验分析" aria-hidden="true">#</a> 7. 逻辑回归实验分析</h2><div class="language-"><pre><code>回归是如何变成分类的呢？\n之前在线性回归问题中，得到了具体的回归值，如果此时任务要做一个二分类该怎么办呢？\n\n如果可以将连续的数值转换成对应的区间，这样就可以完成分类任务了，逻辑回归中借助sigmoid函数完成了数值映射，通过概率值比较来完成分类任务\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> os\n<span class="token operator">%</span>matplotlib inline\n<span class="token keyword">import</span> matplotlib\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;axes.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;xtick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;ytick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\n<span class="token keyword">import</span> warnings\nwarnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span>\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\n\nt <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\nsig <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k-&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k:&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k:&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k-&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span> sig<span class="token punctuation">,</span> <span class="token string">&quot;b-&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">r&quot;$\\sigma(t) = \\frac{1}{1 + e^{-t}}$&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;upper left&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Figure 4-21. Logistic function&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/7.1.png" alt=""></p><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/7.2.png" alt=""></p><h3 id="数据集"><a class="header-anchor" href="#数据集" aria-hidden="true">#</a> 数据集</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn <span class="token keyword">import</span> datasets\niris <span class="token operator">=</span> datasets<span class="token punctuation">.</span>load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token builtin">list</span><span class="token punctuation">(</span>iris<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;target&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;target_names&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;DESCR&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;feature_names&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;filename&#39;</span><span class="token punctuation">]</span>\n\nX <span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span>\ny <span class="token operator">=</span> <span class="token punctuation">(</span>iris<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">int</span><span class="token punctuation">)</span>\n\n\nLogisticRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>\nlog_res<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegression\nlog_res <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nlog_res<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nLogisticRegression<span class="token punctuation">(</span>C<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> class_weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> dual<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> fit_intercept<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n          intercept_scaling<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> multi_class<span class="token operator">=</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>\n          n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> penalty<span class="token operator">=</span><span class="token string">&#39;l2&#39;</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> solver<span class="token operator">=</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>\n          tol<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> warm_start<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n\nX_new <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\ny_proba <span class="token operator">=</span> log_res<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\ny_proba\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.98554411</span><span class="token punctuation">,</span> <span class="token number">0.01445589</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       \n <span class="token comment"># 随着输入特征数值的变化，结果概率值也会随之变化</span>\n       plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\ndecision_boundary <span class="token operator">=</span> X_new<span class="token punctuation">[</span>y_proba<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&gt;=</span><span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>decision_boundary<span class="token punctuation">,</span>decision_boundary<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;k:&#39;</span><span class="token punctuation">,</span>linewidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>y_proba<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;g-&#39;</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;Iris-Virginica&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X_new<span class="token punctuation">,</span>y_proba<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;b--&#39;</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;Not Iris-Virginica&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>arrow<span class="token punctuation">(</span>decision_boundary<span class="token punctuation">,</span><span class="token number">0.08</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>head_width <span class="token operator">=</span> <span class="token number">0.05</span><span class="token punctuation">,</span>head_length<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>fc<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>ec<span class="token operator">=</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>arrow<span class="token punctuation">(</span>decision_boundary<span class="token punctuation">,</span><span class="token number">0.92</span><span class="token punctuation">,</span><span class="token number">0.3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>head_width <span class="token operator">=</span> <span class="token number">0.05</span><span class="token punctuation">,</span>head_length<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>fc<span class="token operator">=</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">,</span>ec<span class="token operator">=</span><span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span>decision_boundary<span class="token operator">+</span><span class="token number">0.02</span><span class="token punctuation">,</span><span class="token number">0.15</span><span class="token punctuation">,</span><span class="token string">&#39;Decision Boundary&#39;</span><span class="token punctuation">,</span>fontsize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span>color <span class="token operator">=</span> <span class="token string">&#39;k&#39;</span><span class="token punctuation">,</span>ha<span class="token operator">=</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Peta width(cm)&#39;</span><span class="token punctuation">,</span>fontsize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;y_proba&#39;</span><span class="token punctuation">,</span>fontsize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.02</span><span class="token punctuation">,</span><span class="token number">1.02</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc <span class="token operator">=</span> <span class="token string">&#39;center left&#39;</span><span class="token punctuation">,</span>fontsize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/7.3.png" alt=""></p><div class="language-python"><pre><code>X <span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\ny <span class="token operator">=</span> <span class="token punctuation">(</span>iris<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">int</span><span class="token punctuation">)</span>\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegression\nlog_res <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>C <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">)</span>\nlog_res<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nLogisticRegression<span class="token punctuation">(</span>C<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span> class_weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> dual<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> fit_intercept<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n          intercept_scaling<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> multi_class<span class="token operator">=</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>\n          n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> penalty<span class="token operator">=</span><span class="token string">&#39;l2&#39;</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> solver<span class="token operator">=</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>\n          tol<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> warm_start<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n\nX<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">6.9</span><span class="token punctuation">)</span>\nX<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="决策边界的绘制"><a class="header-anchor" href="#决策边界的绘制" aria-hidden="true">#</a> 决策边界的绘制</h3><div class="language-"><pre><code>构建坐标数据，合理的范围当中，根据实际训练时输入数据来决定\n整合坐标点，得到所有测试输入数据坐标点\n预测，得到所有点的概率值\n绘制等高线，完成决策边界\n</code></pre></div><div class="language-python"><pre><code>x0<span class="token punctuation">,</span>x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n\nx0\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nnp<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>x0<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x1<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nx0<span class="token punctuation">,</span>x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span><span class="token number">2.7</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nX_new <span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>x0<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x1<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\nX_new\ny_proba <span class="token operator">=</span> log_res<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;bs&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;g^&#39;</span><span class="token punctuation">)</span>\n\nzz <span class="token operator">=</span> y_proba<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x0<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>\ncontour <span class="token operator">=</span> plt<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>x1<span class="token punctuation">,</span>zz<span class="token punctuation">,</span>cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>brg<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>clabel<span class="token punctuation">(</span>contour<span class="token punctuation">,</span>inline <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">,</span><span class="token number">2.7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token string">&#39;NOT Vir&#39;</span><span class="token punctuation">,</span>fontsize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span>color <span class="token operator">=</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">6.5</span><span class="token punctuation">,</span><span class="token number">2.3</span><span class="token punctuation">,</span><span class="token string">&#39;Vir&#39;</span><span class="token punctuation">,</span>fontsize <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span>color <span class="token operator">=</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/7.4.png" alt=""></p><h3 id="多类别分类"><a class="header-anchor" href="#多类别分类" aria-hidden="true">#</a> 多类别分类</h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/7.5.png" alt=""></p><div class="language-python"><pre><code>X <span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\ny <span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span>\n\n\nsoftmax_reg <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>multi_class <span class="token operator">=</span> <span class="token string">&#39;multinomial&#39;</span><span class="token punctuation">,</span>solver<span class="token operator">=</span><span class="token string">&#39;lbfgs&#39;</span><span class="token punctuation">)</span>\nsoftmax_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nLogisticRegression<span class="token punctuation">(</span>C<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> class_weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> dual<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> fit_intercept<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n          intercept_scaling<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> multi_class<span class="token operator">=</span><span class="token string">&#39;multinomial&#39;</span><span class="token punctuation">,</span>\n          n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> penalty<span class="token operator">=</span><span class="token string">&#39;l2&#39;</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> solver<span class="token operator">=</span><span class="token string">&#39;lbfgs&#39;</span><span class="token punctuation">,</span>\n          tol<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> warm_start<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nsoftmax_reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nsoftmax_reg<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nx0<span class="token punctuation">,</span> x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>\n        np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.5</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span>\nX_new <span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>x0<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x1<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n\n\ny_proba <span class="token operator">=</span> softmax_reg<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\ny_predict <span class="token operator">=</span> softmax_reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\n\nzz1 <span class="token operator">=</span> y_proba<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x0<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>\nzz <span class="token operator">=</span> y_predict<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x0<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;g^&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Iris-Virginica&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;bs&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Iris-Versicolor&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;yo&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Iris-Setosa&quot;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>colors <span class="token keyword">import</span> ListedColormap\ncustom_cmap <span class="token operator">=</span> ListedColormap<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;#fafab0&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#9898ff&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#a0faa0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>x0<span class="token punctuation">,</span> x1<span class="token punctuation">,</span> zz<span class="token punctuation">,</span> cmap<span class="token operator">=</span>custom_cmap<span class="token punctuation">)</span>\ncontour <span class="token operator">=</span> plt<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>x0<span class="token punctuation">,</span> x1<span class="token punctuation">,</span> zz1<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>brg<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>clabel<span class="token punctuation">(</span>contour<span class="token punctuation">,</span> inline<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;Petal length&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;Petal width&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;center left&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/7.6.png" alt=""></p><h2 id="_8-聚类算法原理"><a class="header-anchor" href="#_8-聚类算法原理" aria-hidden="true">#</a> 8. 聚类算法原理</h2><p>kmeans</p><p>优势： 简单，快速，适合常规数据集 K值难确定 劣势： 复杂度与样本呈线性关系 很难发现任意形状的簇</p><p>db聚类</p><p>优势： 不需要指定簇个数 擅长找到离群点（检测任务） 可以发现任意形状的簇 两个参数就够了</p><p>劣势</p><p>高维数据有些困难（可以做降维） Sklearn中效率很慢（数据削减策略） 参数难以选择（参数对结果的影响非常</p><h2 id="_9-kmeans代码实现"><a class="header-anchor" href="#_9-kmeans代码实现" aria-hidden="true">#</a> 9. Kmeans代码实现</h2><div class="language-python"><pre><code>\n</code></pre></div><h2 id="_10-聚类算法实验分析"><a class="header-anchor" href="#_10-聚类算法实验分析" aria-hidden="true">#</a> 10. 聚类算法实验分析</h2><h3 id="kmeans"><a class="header-anchor" href="#kmeans" aria-hidden="true">#</a> Kmeans</h3><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> os\n<span class="token operator">%</span>matplotlib inline\n<span class="token keyword">import</span> matplotlib\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;axes.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;xtick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;ytick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\n<span class="token keyword">import</span> warnings\nwarnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span>\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> make_blobs\n\nblob_centers <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>\n    <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token number">2.3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n     <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">2.3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n     <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.8</span><span class="token punctuation">,</span><span class="token number">1.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n     <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.8</span><span class="token punctuation">,</span><span class="token number">2.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n     <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.8</span><span class="token punctuation">,</span><span class="token number">1.3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nblob_std <span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.4</span><span class="token punctuation">,</span><span class="token number">0.3</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> \nX<span class="token punctuation">,</span>y <span class="token operator">=</span> make_blobs<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">2000</span><span class="token punctuation">,</span>centers<span class="token operator">=</span>blob_centers<span class="token punctuation">,</span>\n                     cluster_std <span class="token operator">=</span> blob_std<span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_clusters</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$x_2$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplot_clusters<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.1.png" alt=""></p><h3 id="决策边界"><a class="header-anchor" href="#决策边界" aria-hidden="true">#</a> 决策边界</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> KMeans\nk <span class="token operator">=</span> <span class="token number">5</span>\nkmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> k<span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\ny_pred <span class="token operator">=</span>  kmeans<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n\n<span class="token comment"># fit_predict(X)与kmeans.labels_ 得到预测结果是一致的</span>\n<span class="token comment"># 分类标签</span>\ny_pred\nkmeans<span class="token punctuation">.</span>labels_ \narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment"># 中心点</span>\nkmeans<span class="token punctuation">.</span>cluster_centers_\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.80389616</span><span class="token punctuation">,</span>  <span class="token number">1.80117999</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span> <span class="token number">0.20876306</span><span class="token punctuation">,</span>  <span class="token number">2.25551336</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.79290307</span><span class="token punctuation">,</span>  <span class="token number">2.79641063</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.46679593</span><span class="token punctuation">,</span>  <span class="token number">2.28585348</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.80037642</span><span class="token punctuation">,</span>  <span class="token number">1.30082566</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code>X_new <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nkmeans<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nkmeans<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2.81093633</span><span class="token punctuation">,</span> <span class="token number">0.32995317</span><span class="token punctuation">,</span> <span class="token number">2.9042344</span> <span class="token punctuation">,</span> <span class="token number">1.49439034</span><span class="token punctuation">,</span> <span class="token number">2.88633901</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">5.80730058</span><span class="token punctuation">,</span> <span class="token number">2.80290755</span><span class="token punctuation">,</span> <span class="token number">5.84739223</span><span class="token punctuation">,</span> <span class="token number">4.4759332</span> <span class="token punctuation">,</span> <span class="token number">5.84236351</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">1.21475352</span><span class="token punctuation">,</span> <span class="token number">3.29399768</span><span class="token punctuation">,</span> <span class="token number">0.29040966</span><span class="token punctuation">,</span> <span class="token number">1.69136631</span><span class="token punctuation">,</span> <span class="token number">1.71086031</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">0.72581411</span><span class="token punctuation">,</span> <span class="token number">3.21806371</span><span class="token punctuation">,</span> <span class="token number">0.36159148</span><span class="token punctuation">,</span> <span class="token number">1.54808703</span><span class="token punctuation">,</span> <span class="token number">1.21567622</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_data</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;k.&#39;</span><span class="token punctuation">,</span> markersize<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_centroids</span><span class="token punctuation">(</span>centroids<span class="token punctuation">,</span> weights<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> circle_color<span class="token operator">=</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> cross_color<span class="token operator">=</span><span class="token string">&#39;k&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">if</span> weights <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        centroids <span class="token operator">=</span> centroids<span class="token punctuation">[</span>weights <span class="token operator">&gt;</span> weights<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">]</span>\n    plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centroids<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> centroids<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                marker<span class="token operator">=</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> linewidths<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>\n                color<span class="token operator">=</span>circle_color<span class="token punctuation">,</span> zorder<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centroids<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> centroids<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                marker<span class="token operator">=</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> linewidths<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>\n                color<span class="token operator">=</span>cross_color<span class="token punctuation">,</span> zorder<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_decision_boundaries</span><span class="token punctuation">(</span>clusterer<span class="token punctuation">,</span> X<span class="token punctuation">,</span> resolution<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> show_centroids<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n                             show_xlabels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    mins <span class="token operator">=</span> X<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.1</span>\n    maxs <span class="token operator">=</span> X<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.1</span>\n    xx<span class="token punctuation">,</span> yy <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>mins<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> maxs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> resolution<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                         np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>mins<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> maxs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> resolution<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    Z <span class="token operator">=</span> clusterer<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>xx<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> yy<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    Z <span class="token operator">=</span> Z<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>xx<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>\n\n    plt<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>Z<span class="token punctuation">,</span> extent<span class="token operator">=</span><span class="token punctuation">(</span>mins<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> maxs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mins<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> maxs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                cmap<span class="token operator">=</span><span class="token string">&quot;Pastel2&quot;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>Z<span class="token punctuation">,</span> extent<span class="token operator">=</span><span class="token punctuation">(</span>mins<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> maxs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mins<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> maxs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                linewidths<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> colors<span class="token operator">=</span><span class="token string">&#39;k&#39;</span><span class="token punctuation">)</span>\n    plot_data<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> show_centroids<span class="token punctuation">:</span>\n        plot_centroids<span class="token punctuation">(</span>clusterer<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> show_xlabels<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelbottom<span class="token operator">=</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> show_ylabels<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$x_2$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelleft<span class="token operator">=</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans<span class="token punctuation">,</span> X<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.2.png" alt=""></p><h3 id="算法流程"><a class="header-anchor" href="#算法流程" aria-hidden="true">#</a> 算法流程</h3><div class="language-python"><pre><code><span class="token comment"># 展示了迭代的过程</span>\nkmeans_iter1 <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>init <span class="token operator">=</span> <span class="token string">&#39;random&#39;</span><span class="token punctuation">,</span>n_init <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>max_iter<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\nkmeans_iter2 <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>init <span class="token operator">=</span> <span class="token string">&#39;random&#39;</span><span class="token punctuation">,</span>n_init <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>max_iter<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\nkmeans_iter3 <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>init <span class="token operator">=</span> <span class="token string">&#39;random&#39;</span><span class="token punctuation">,</span>n_init <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>max_iter<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\n\nkmeans_iter1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nkmeans_iter2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nkmeans_iter3<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">321</span><span class="token punctuation">)</span>\nplot_data<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nplot_centroids<span class="token punctuation">(</span>kmeans_iter1<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">,</span> circle_color<span class="token operator">=</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> cross_color<span class="token operator">=</span><span class="token string">&#39;k&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Update cluster_centers&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">322</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans_iter1<span class="token punctuation">,</span> X<span class="token punctuation">,</span>show_xlabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Label&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">323</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans_iter1<span class="token punctuation">,</span> X<span class="token punctuation">,</span>show_xlabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplot_centroids<span class="token punctuation">(</span>kmeans_iter2<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">,</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">324</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans_iter2<span class="token punctuation">,</span> X<span class="token punctuation">,</span>show_xlabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">325</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans_iter2<span class="token punctuation">,</span> X<span class="token punctuation">,</span>show_xlabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplot_centroids<span class="token punctuation">(</span>kmeans_iter3<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">,</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">326</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans_iter3<span class="token punctuation">,</span> X<span class="token punctuation">,</span>show_xlabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.3.png" alt=""></p><h3 id="不稳定的结果"><a class="header-anchor" href="#不稳定的结果" aria-hidden="true">#</a> 不稳定的结果</h3><p>初始的随机种子不一样，得到的结果也不同</p><div class="language-python"><pre><code><span class="token keyword">def</span> <span class="token function">plot_clusterer_comparison</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>X<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    c1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n    c2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n    \n    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\n    plot_decision_boundaries<span class="token punctuation">(</span>c1<span class="token punctuation">,</span>X<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\n    plot_decision_boundaries<span class="token punctuation">(</span>c2<span class="token punctuation">,</span>X<span class="token punctuation">)</span>\n    \nc1 <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>init<span class="token operator">=</span><span class="token string">&#39;random&#39;</span><span class="token punctuation">,</span>n_init <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token comment"># 随机种子 初始中心点</span>\nc2 <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>init<span class="token operator">=</span><span class="token string">&#39;random&#39;</span><span class="token punctuation">,</span>n_init <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">)</span>\nplot_clusterer_comparison<span class="token punctuation">(</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>X<span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.4.png" alt=""></p><h3 id="评估方法"><a class="header-anchor" href="#评估方法" aria-hidden="true">#</a> 评估方法</h3><div class="language-python"><pre><code><span class="token comment"># Inertia指标：每个样本与其质心的距离</span>\n\nkmeans<span class="token punctuation">.</span>inertia_ <span class="token comment"># 希望越小越好</span>\n<span class="token number">211.5985372581684</span>\n\n<span class="token comment">#transform得到的是当前样本到每个簇中心距离</span>\nkmeans<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.46779778</span><span class="token punctuation">,</span> <span class="token number">3.04611916</span><span class="token punctuation">,</span> <span class="token number">1.45402521</span><span class="token punctuation">,</span> <span class="token number">1.54944305</span><span class="token punctuation">,</span> <span class="token number">0.11146795</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">0.07122059</span><span class="token punctuation">,</span> <span class="token number">3.11541584</span><span class="token punctuation">,</span> <span class="token number">0.99002955</span><span class="token punctuation">,</span> <span class="token number">1.48612753</span><span class="token punctuation">,</span> <span class="token number">0.51431557</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">3.81713488</span><span class="token punctuation">,</span> <span class="token number">1.32016676</span><span class="token punctuation">,</span> <span class="token number">4.09069201</span><span class="token punctuation">,</span> <span class="token number">2.67154781</span><span class="token punctuation">,</span> <span class="token number">3.76340605</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">0.92830156</span><span class="token punctuation">,</span> <span class="token number">3.04886464</span><span class="token punctuation">,</span> <span class="token number">0.06769209</span><span class="token punctuation">,</span> <span class="token number">1.40795651</span><span class="token punctuation">,</span> <span class="token number">1.42865797</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">3.10300136</span><span class="token punctuation">,</span> <span class="token number">0.14895409</span><span class="token punctuation">,</span> <span class="token number">3.05913478</span><span class="token punctuation">,</span> <span class="token number">1.71125</span>   <span class="token punctuation">,</span> <span class="token number">3.23385668</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token number">0.22700281</span><span class="token punctuation">,</span> <span class="token number">2.8625311</span> <span class="token punctuation">,</span> <span class="token number">0.85434589</span><span class="token punctuation">,</span> <span class="token number">1.21678483</span><span class="token punctuation">,</span> <span class="token number">0.67518173</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nkmeans<span class="token punctuation">.</span>labels_\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nX_dist<span class="token punctuation">[</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X_dist<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>kmeans<span class="token punctuation">.</span>labels_<span class="token punctuation">]</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.11146795</span><span class="token punctuation">,</span> <span class="token number">0.07122059</span><span class="token punctuation">,</span> <span class="token number">1.32016676</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">0.06769209</span><span class="token punctuation">,</span> <span class="token number">0.14895409</span><span class="token punctuation">,</span>\n       <span class="token number">0.22700281</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nnp<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>X_dist<span class="token punctuation">[</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X_dist<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>kmeans<span class="token punctuation">.</span>labels_<span class="token punctuation">]</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token number">211.59853725816856</span>\nkmeans<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n<span class="token operator">-</span><span class="token number">211.59853725816856</span>\n</code></pre></div><h3 id="找到最佳簇数"><a class="header-anchor" href="#找到最佳簇数" aria-hidden="true">#</a> 找到最佳簇数</h3><div class="language-python"><pre><code><span class="token comment"># 如果k值越大，得到的结果肯定会越来越小！！！</span>\nkmeans_per_k <span class="token operator">=</span> <span class="token punctuation">[</span>KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> k<span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span> <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\ninertias <span class="token operator">=</span> <span class="token punctuation">[</span>model<span class="token punctuation">.</span>inertia_ <span class="token keyword">for</span> model <span class="token keyword">in</span> kmeans_per_k<span class="token punctuation">]</span>\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>inertias<span class="token punctuation">,</span><span class="token string">&#39;bo-&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1300</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.5.png" alt=""></p><h3 id="轮廓系数"><a class="header-anchor" href="#轮廓系数" aria-hidden="true">#</a> 轮廓系数</h3><p>另一种判断k值的 方法</p><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.6.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> silhouette_score \n<span class="token comment"># 轮廓系数</span>\nsilhouette_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span>kmeans<span class="token punctuation">.</span>labels_<span class="token punctuation">)</span>\n<span class="token number">0.655517642572828</span>\n\nkmeans_per_k\n<span class="token punctuation">[</span>KMeans<span class="token punctuation">(</span>algorithm<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> copy_x<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span>\n     n_clusters<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> precompute_distances<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>\n     random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> tol<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n KMeans<span class="token punctuation">(</span>algorithm<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> copy_x<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> init<span class="token operator">=</span><span class="token string">&#39;k-means++&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span>\n     n_clusters<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> n_init<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> precompute_distances<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>\n     random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> tol<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n \nsilhouette_scores <span class="token operator">=</span> <span class="token punctuation">[</span>silhouette_score<span class="token punctuation">(</span>X<span class="token punctuation">,</span>model<span class="token punctuation">.</span>labels_<span class="token punctuation">)</span> <span class="token keyword">for</span> model <span class="token keyword">in</span> kmeans_per_k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token comment"># 轮廓系数越接近1 说明越合理  但不一定最合理 只是参考</span>\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>silhouette_scores<span class="token punctuation">,</span><span class="token string">&#39;bo-&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.7.png" alt=""></p><h3 id="kmeans存在的问题"><a class="header-anchor" href="#kmeans存在的问题" aria-hidden="true">#</a> Kmeans存在的问题</h3><div class="language-python"><pre><code><span class="token comment"># 评估只能当做参考</span>\nX1<span class="token punctuation">,</span> y1 <span class="token operator">=</span> make_blobs<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> centers<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nX1 <span class="token operator">=</span> X1<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.374</span><span class="token punctuation">,</span> <span class="token number">0.95</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.732</span><span class="token punctuation">,</span> <span class="token number">0.598</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nX2<span class="token punctuation">,</span> y2 <span class="token operator">=</span> make_blobs<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">250</span><span class="token punctuation">,</span> centers<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nX2 <span class="token operator">=</span> X2 <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span>\nX <span class="token operator">=</span> np<span class="token punctuation">.</span>r_<span class="token punctuation">[</span>X1<span class="token punctuation">,</span> X2<span class="token punctuation">]</span>\ny <span class="token operator">=</span> np<span class="token punctuation">.</span>r_<span class="token punctuation">[</span>y1<span class="token punctuation">,</span> y2<span class="token punctuation">]</span>\n\nplot_data<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.8.png" alt=""></p><div class="language-python"><pre><code><span class="token comment"># 玩赖的 初始值规定了比较合理三个中心</span>\n<span class="token comment"># 事实上 即使inertia比较小 看出来分类也比较不合理</span>\nkmeans_good <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>init<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n_init<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nkmeans_bad <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nkmeans_good<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nkmeans_bad<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans_good<span class="token punctuation">,</span>X<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Good - inertia = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>kmeans_good<span class="token punctuation">.</span>inertia_<span class="token punctuation">)</span><span class="token punctuation">)</span>\n \nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_decision_boundaries<span class="token punctuation">(</span>kmeans_bad<span class="token punctuation">,</span>X<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Bad - inertia = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>kmeans_bad<span class="token punctuation">.</span>inertia_<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.9.png" alt=""></p><h3 id="图像分割小例子"><a class="header-anchor" href="#图像分割小例子" aria-hidden="true">#</a> 图像分割小例子</h3><div class="language-python"><pre><code><span class="token comment">#ladybug.png 把向日葵从图像中分割出来</span>\n<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>image <span class="token keyword">import</span> imread\nimage <span class="token operator">=</span> imread<span class="token punctuation">(</span><span class="token string">&#39;ladybug.png&#39;</span><span class="token punctuation">)</span>\nimage<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">533</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\n\n\nX <span class="token operator">=</span> image<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>\nX<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">426400</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\n\nkmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n<span class="token comment"># 拿到中心位置</span>\nkmeans<span class="token punctuation">.</span>cluster_centers_\n\n<span class="token comment"># 需要还原成三维  图片</span>\nsegmented_img <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">[</span>kmeans<span class="token punctuation">.</span>labels_<span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">533</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>\n\nsegmented_imgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\nn_colors <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token comment"># 不同聚类中心进行展示</span>\n<span class="token keyword">for</span> n_cluster <span class="token keyword">in</span> n_colors<span class="token punctuation">:</span>\n    kmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters <span class="token operator">=</span> n_cluster<span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\n    segmented_img <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">[</span>kmeans<span class="token punctuation">.</span>labels_<span class="token punctuation">]</span>\n    segmented_imgs<span class="token punctuation">.</span>append<span class="token punctuation">(</span>segmented_img<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>image<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    \nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">231</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Original image&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">for</span> idx<span class="token punctuation">,</span>n_clusters <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>n_colors<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">232</span><span class="token operator">+</span>idx<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>segmented_imgs<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;{}colors&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n_clusters<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.10.png" alt=""></p><h3 id="半监督学习"><a class="header-anchor" href="#半监督学习" aria-hidden="true">#</a> 半监督学习</h3><p>用逻辑回归识别手写体数字，可以用无监督聚类提高准确率</p><div class="language-python"><pre><code><span class="token comment"># 首先，让我们将训练集聚类为50个集群， 然后对于每个聚类，让我们找到最靠近质心的图像。 我们将这些图像称为代表性图像</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_digits\n\nX_digits<span class="token punctuation">,</span>y_digits <span class="token operator">=</span> load_digits<span class="token punctuation">(</span>return_X_y <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split\n\nX_train<span class="token punctuation">,</span>X_test<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X_digits<span class="token punctuation">,</span>y_digits<span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n<span class="token comment"># 有1347个手写体，8*8的像素点</span>\nX_train<span class="token punctuation">.</span>shape \n<span class="token punctuation">(</span><span class="token number">1347</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>\ny_train<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">1347</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token comment">#直接用逻辑回归的话 一般</span>\n<span class="token comment">#训练集只选了前50个</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegression\nn_labeled <span class="token operator">=</span> <span class="token number">50</span>\n\nlog_reg <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nlog_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">[</span><span class="token punctuation">:</span>n_labeled<span class="token punctuation">]</span><span class="token punctuation">,</span> y_train<span class="token punctuation">[</span><span class="token punctuation">:</span>n_labeled<span class="token punctuation">]</span><span class="token punctuation">)</span>\nlog_reg<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span>\n<span class="token number">0.8266666666666667</span>\n\n<span class="token comment"># 对这前50个进行聚类</span>\nk <span class="token operator">=</span> <span class="token number">50</span>\nkmeans <span class="token operator">=</span> KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span>k<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nX_digits_dist <span class="token operator">=</span> kmeans<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X_train<span class="token punctuation">)</span>\nX_digits_dist<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">1347</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>\n<span class="token comment"># 它用于返回数组中最小元素的索引</span>\nrepresentative_digits_idx <span class="token operator">=</span> np<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span>X_digits_dist<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\nrepresentative_digits_idx<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n\nX_representative_digits <span class="token operator">=</span> X_train<span class="token punctuation">[</span>representative_digits_idx<span class="token punctuation">]</span>\n\n<span class="token comment"># 现在让我们绘制这些代表性图像并手动标记它们：</span>\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> index<span class="token punctuation">,</span> X_representative_digit <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>X_representative_digits<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>k <span class="token operator">//</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>X_representative_digit<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&quot;binary&quot;</span><span class="token punctuation">,</span> interpolation<span class="token operator">=</span><span class="token string">&quot;bilinear&quot;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.11.png" alt=""></p><div class="language-python"><pre><code>y_representative_digits <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token comment"># 现在我们有一个只有50个标记实例的数据集，它们中的每一个都是其集群的代表性图像，而不是完全随机的实例。 让我们看看性能是否更好：</span>\n\nlog_reg <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nlog_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_representative_digits<span class="token punctuation">,</span> y_representative_digits<span class="token punctuation">)</span>\nlog_reg<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span>\n<span class="token number">0.9244444444444444</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># 但也许我们可以更进一步：如果我们将标签传播到同一群集中的所有其他实例，该怎么办？</span>\ny_train_propagated <span class="token operator">=</span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X_train<span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    y_train_propagated<span class="token punctuation">[</span>kmeans<span class="token punctuation">.</span>labels_<span class="token operator">==</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> y_representative_digits<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n    \nlog_reg <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nlog_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train_propagated<span class="token punctuation">)</span>\nLogisticRegression<span class="token punctuation">(</span>C<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> class_weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> dual<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> fit_intercept<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n          intercept_scaling<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> multi_class<span class="token operator">=</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>\n          n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> penalty<span class="token operator">=</span><span class="token string">&#39;l2&#39;</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> solver<span class="token operator">=</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">,</span>\n          tol<span class="token operator">=</span><span class="token number">0.0001</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> warm_start<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n\nlog_reg<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span>\n<span class="token number">0.9288888888888889</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token comment">#只选择前20个来试试</span>\npercentile_closest <span class="token operator">=</span> <span class="token number">20</span>\n\nX_cluster_dist <span class="token operator">=</span> X_digits_dist<span class="token punctuation">[</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X_train<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> kmeans<span class="token punctuation">.</span>labels_<span class="token punctuation">]</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    in_cluster <span class="token operator">=</span> <span class="token punctuation">(</span>kmeans<span class="token punctuation">.</span>labels_ <span class="token operator">==</span> i<span class="token punctuation">)</span>\n    cluster_dist <span class="token operator">=</span> X_cluster_dist<span class="token punctuation">[</span>in_cluster<span class="token punctuation">]</span> <span class="token comment">#选择属于当前簇的所有样本</span>\n    cutoff_distance <span class="token operator">=</span> np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>cluster_dist<span class="token punctuation">,</span> percentile_closest<span class="token punctuation">)</span> <span class="token comment">#排序找到前20个</span>\n    above_cutoff <span class="token operator">=</span> <span class="token punctuation">(</span>X_cluster_dist <span class="token operator">&gt;</span> cutoff_distance<span class="token punctuation">)</span> <span class="token comment"># False True结果</span>\n    X_cluster_dist<span class="token punctuation">[</span>in_cluster <span class="token operator">&amp;</span> above_cutoff<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>\n\npartially_propagated <span class="token operator">=</span> <span class="token punctuation">(</span>X_cluster_dist <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\nX_train_partially_propagated <span class="token operator">=</span> X_train<span class="token punctuation">[</span>partially_propagated<span class="token punctuation">]</span>\ny_train_partially_propagated <span class="token operator">=</span> y_train_propagated<span class="token punctuation">[</span>partially_propagated<span class="token punctuation">]</span>\n\nlog_reg <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nlog_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train_partially_propagated<span class="token punctuation">,</span> y_train_partially_propagated<span class="token punctuation">)</span>\n\nlog_reg<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span>\n<span class="token number">0.9422222222222222</span>\n</code></pre></div><h3 id="dbscan"><a class="header-anchor" href="#dbscan" aria-hidden="true">#</a> DBSCAN</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> make_moons\nX<span class="token punctuation">,</span> y <span class="token operator">=</span> make_moons<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> noise<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;b.&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.12.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">import</span> DBSCAN\ndbscan <span class="token operator">=</span> DBSCAN<span class="token punctuation">(</span>eps <span class="token operator">=</span> <span class="token number">0.05</span><span class="token punctuation">,</span>min_samples<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>\ndbscan<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nDBSCAN<span class="token punctuation">(</span>algorithm<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> eps<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">,</span> leaf_size<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> metric<span class="token operator">=</span><span class="token string">&#39;euclidean&#39;</span><span class="token punctuation">,</span>\n    metric_params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> min_samples<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> p<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>\n\n\ndbscan<span class="token punctuation">.</span>labels_<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>int64<span class="token punctuation">)</span>\ndbscan<span class="token punctuation">.</span>core_sample_indices_<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>int64<span class="token punctuation">)</span>\nnp<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>dbscan<span class="token punctuation">.</span>labels_<span class="token punctuation">)</span> <span class="token comment">#相当于看集合了</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>int64<span class="token punctuation">)</span>\n\ndbscan2 <span class="token operator">=</span> DBSCAN<span class="token punctuation">(</span>eps <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">,</span>min_samples<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>\ndbscan2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nDBSCAN<span class="token punctuation">(</span>algorithm<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> eps<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> leaf_size<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> metric<span class="token operator">=</span><span class="token string">&#39;euclidean&#39;</span><span class="token punctuation">,</span>\n    metric_params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> min_samples<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> p<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>\n\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">def</span> <span class="token function">plot_dbscan</span><span class="token punctuation">(</span>dbscan<span class="token punctuation">,</span> X<span class="token punctuation">,</span> size<span class="token punctuation">,</span> show_xlabels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    core_mask <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>dbscan<span class="token punctuation">.</span>labels_<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">bool</span><span class="token punctuation">)</span>\n    core_mask<span class="token punctuation">[</span>dbscan<span class="token punctuation">.</span>core_sample_indices_<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>\n    anomalies_mask <span class="token operator">=</span> dbscan<span class="token punctuation">.</span>labels_ <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span>\n    non_core_mask <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span>core_mask <span class="token operator">|</span> anomalies_mask<span class="token punctuation">)</span>\n\n    cores <span class="token operator">=</span> dbscan<span class="token punctuation">.</span>components_\n    anomalies <span class="token operator">=</span> X<span class="token punctuation">[</span>anomalies_mask<span class="token punctuation">]</span>\n    non_cores <span class="token operator">=</span> X<span class="token punctuation">[</span>non_core_mask<span class="token punctuation">]</span>\n    \n    plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>cores<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cores<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                c<span class="token operator">=</span>dbscan<span class="token punctuation">.</span>labels_<span class="token punctuation">[</span>core_mask<span class="token punctuation">]</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span>size<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">&quot;Paired&quot;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>cores<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cores<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> c<span class="token operator">=</span>dbscan<span class="token punctuation">.</span>labels_<span class="token punctuation">[</span>core_mask<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>anomalies<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> anomalies<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                c<span class="token operator">=</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>non_cores<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> non_cores<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>dbscan<span class="token punctuation">.</span>labels_<span class="token punctuation">[</span>non_core_mask<span class="token punctuation">]</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> show_xlabels<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelbottom<span class="token operator">=</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> show_ylabels<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$x_2$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelleft<span class="token operator">=</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;eps={:.2f}, min_samples={}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>dbscan<span class="token punctuation">.</span>eps<span class="token punctuation">,</span> dbscan<span class="token punctuation">.</span>min_samples<span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_dbscan<span class="token punctuation">(</span>dbscan<span class="token punctuation">,</span> X<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_dbscan<span class="token punctuation">(</span>dbscan2<span class="token punctuation">,</span> X<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">,</span> show_ylabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/10.13.png" alt=""></p><h2 id="_11-决策树原理"><a class="header-anchor" href="#_11-决策树原理" aria-hidden="true">#</a> 11. 决策树原理</h2><p>分类和回归都可以解决</p><h2 id="_12-决策树手写代码实现"><a class="header-anchor" href="#_12-决策树手写代码实现" aria-hidden="true">#</a> 12. 决策树手写代码实现</h2><h2 id="_13-决策树算法实验分析"><a class="header-anchor" href="#_13-决策树算法实验分析" aria-hidden="true">#</a> 13. 决策树算法实验分析</h2><div class="language-pythono"><pre><code>import numpy as np\nimport os\n%matplotlib inline\nimport matplotlib\nimport matplotlib.pyplot as plt\nplt.rcParams[&#39;axes.labelsize&#39;] = 14\nplt.rcParams[&#39;xtick.labelsize&#39;] = 12\nplt.rcParams[&#39;ytick.labelsize&#39;] = 12\nimport warnings\nwarnings.filterwarnings(&#39;ignore&#39;)\n</code></pre></div><ul><li>下载安装包：<a href="https://graphviz.gitlab.io/_pages/Download/Download_windows.html" target="_blank" rel="noopener noreferrer">https://graphviz.gitlab.io/_pages/Download/Download_windows.html</a></li><li>环境变量配置：<a href="https://jingyan.baidu.com/article/020278115032461bcc9ce598.html" target="_blank" rel="noopener noreferrer">https://jingyan.baidu.com/article/020278115032461bcc9ce598.html</a></li></ul><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_iris\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeClassifier\n\niris <span class="token operator">=</span> load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>\nX <span class="token operator">=</span> iris<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># petal length and width</span>\ny <span class="token operator">=</span> iris<span class="token punctuation">.</span>target\n\ntree_clf <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\ntree_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nDecisionTreeClassifier<span class="token punctuation">(</span>class_weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> criterion<span class="token operator">=</span><span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span> max_depth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>\n            max_features<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> max_leaf_nodes<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n            min_impurity_decrease<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> min_impurity_split<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n            min_samples_leaf<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>\n            min_weight_fraction_leaf<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> presort<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n            splitter<span class="token operator">=</span><span class="token string">&#39;best&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> export_graphviz\n\nexport_graphviz<span class="token punctuation">(</span>\n    tree_clf<span class="token punctuation">,</span>\n    out_file<span class="token operator">=</span><span class="token string">&quot;iris_tree.dot&quot;</span><span class="token punctuation">,</span>\n    feature_names<span class="token operator">=</span>iris<span class="token punctuation">.</span>feature_names<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    class_names<span class="token operator">=</span>iris<span class="token punctuation">.</span>target_names<span class="token punctuation">,</span>\n    rounded<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n    filled<span class="token operator">=</span><span class="token boolean">True</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p>然后，你可以使用graphviz包中的dot命令行工具将此**.dot**文件转换为各种格式，如PDF或PNG。下面这条命令行将.dot文件转换为.png图像文件：</p><p>$ dot -Tpng iris_tree.dot -o iris_tree.png</p><div class="language-python"><pre><code><span class="token keyword">from</span> IPython<span class="token punctuation">.</span>display <span class="token keyword">import</span> Image\nImage<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&#39;iris_tree.png&#39;</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/13.1.png" alt=""></p><h3 id="决策边界展示"><a class="header-anchor" href="#决策边界展示" aria-hidden="true">#</a> 决策边界展示</h3><div class="language-python"><pre><code><span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>colors <span class="token keyword">import</span> ListedColormap\n\n<span class="token keyword">def</span> <span class="token function">plot_decision_boundary</span><span class="token punctuation">(</span>clf<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> iris<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> legend<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> plot_training<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    x1s <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\n    x2s <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>axes<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axes<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>\n    x1<span class="token punctuation">,</span> x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x1s<span class="token punctuation">,</span> x2s<span class="token punctuation">)</span>\n    X_new <span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>x1<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x2<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n    y_pred <span class="token operator">=</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x1<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>\n    custom_cmap <span class="token operator">=</span> ListedColormap<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;#fafab0&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#9898ff&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#a0faa0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y_pred<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span>custom_cmap<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token keyword">not</span> iris<span class="token punctuation">:</span>\n        custom_cmap2 <span class="token operator">=</span> ListedColormap<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;#7d7d58&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#4c4c7f&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#507d50&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y_pred<span class="token punctuation">,</span> cmap<span class="token operator">=</span>custom_cmap2<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> plot_training<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;yo&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Iris-Setosa&quot;</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;bs&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Iris-Versicolor&quot;</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;g^&quot;</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;Iris-Virginica&quot;</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span>axes<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> iris<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;Petal length&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;Petal width&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">r&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">r&quot;$x_2$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> legend<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;lower right&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>tree_clf<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.45</span><span class="token punctuation">,</span> <span class="token number">2.45</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k-&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2.45</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k--&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4.95</span><span class="token punctuation">,</span> <span class="token number">4.95</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1.75</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k:&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4.85</span><span class="token punctuation">,</span> <span class="token number">4.85</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1.75</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k:&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">1.40</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token string">&quot;Depth=0&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">3.2</span><span class="token punctuation">,</span> <span class="token number">1.80</span><span class="token punctuation">,</span> <span class="token string">&quot;Depth=1&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">4.05</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&quot;(Depth=2)&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Decision Tree decision boundaries&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/13.2.png" alt=""></p><h3 id="概率估计"><a class="header-anchor" href="#概率估计" aria-hidden="true">#</a> 概率估计</h3><div class="language-"><pre><code>估计类概率 输入数据为：花瓣长5厘米，宽1.5厘米的花。 相应的叶节点是深度为2的左节点，因此决策树应输出以下概率：\n\nIris-Setosa 为 0％（0/54），\nIris-Versicolor 为 90.7％（49/54），\nIris-Virginica 为 9.3％（5/54）。\n</code></pre></div><div class="language-python"><pre><code>tree_clf<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span>        <span class="token punctuation">,</span> <span class="token number">0.90740741</span><span class="token punctuation">,</span> <span class="token number">0.09259259</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\ntree_clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="决策树中的正则化"><a class="header-anchor" href="#决策树中的正则化" aria-hidden="true">#</a> 决策树中的正则化</h3><div class="language-"><pre><code>DecisionTreeClassifier类还有一些其他参数类似地限制了决策树的形状：\nmin_samples_split（节点在分割之前必须具有的最小样本数），\nmin_samples_leaf（叶子节点必须具有的最小样本数），\nmax_leaf_nodes（叶子节点的最大数量），\nmax_features（在每个节点处评估用于拆分的最大特征数）。\nmax_depth(树最大的深度)\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> make_moons\nX<span class="token punctuation">,</span>y <span class="token operator">=</span> make_moons<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>noise<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">53</span><span class="token punctuation">)</span>\ntree_clf1 <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\ntree_clf2 <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span>min_samples_leaf<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\ntree_clf1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\ntree_clf2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>tree_clf1<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>iris<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;No restrictions&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>tree_clf2<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>iris<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;min_samples_leaf=4&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/13.3.png" alt=""></p><h3 id="对数据的敏感"><a class="header-anchor" href="#对数据的敏感" aria-hidden="true">#</a> 对数据的敏感</h3><div class="language-python"><pre><code>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>\nXs <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span>\nys <span class="token operator">=</span> <span class="token punctuation">(</span>Xs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span>\n\nangle <span class="token operator">=</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">4</span>\nrotation_matrix <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>angle<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>angle<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>angle<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>angle<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nXsr <span class="token operator">=</span> Xs<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>rotation_matrix<span class="token punctuation">)</span>\n\ntree_clf_s <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\ntree_clf_s<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>Xs<span class="token punctuation">,</span> ys<span class="token punctuation">)</span>\ntree_clf_sr <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\ntree_clf_sr<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>Xsr<span class="token punctuation">,</span> ys<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>tree_clf_s<span class="token punctuation">,</span> Xs<span class="token punctuation">,</span> ys<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> iris<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Sensitivity to training set rotation&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>tree_clf_sr<span class="token punctuation">,</span> Xsr<span class="token punctuation">,</span> ys<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> iris<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Sensitivity to training set rotation&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/13.4.png" alt=""></p><h3 id="回归任务"><a class="header-anchor" href="#回归任务" aria-hidden="true">#</a> 回归任务</h3><div class="language-python"><pre><code>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\nm<span class="token operator">=</span><span class="token number">200</span>\nX<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\ny <span class="token operator">=</span> <span class="token number">4</span><span class="token operator">*</span><span class="token punctuation">(</span>X<span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span>\ny <span class="token operator">=</span> y <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">10</span>\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeRegressor\n\ntree_reg <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\ntree_reg<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n\nexport_graphviz<span class="token punctuation">(</span>\n        tree_reg<span class="token punctuation">,</span>\n        out_file<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;regression_tree.dot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        feature_names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;x1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        rounded<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n        filled<span class="token operator">=</span><span class="token boolean">True</span>\n    <span class="token punctuation">)</span>\n<span class="token comment"># 你的第二个决策树长这样</span>\n<span class="token keyword">from</span> IPython<span class="token punctuation">.</span>display <span class="token keyword">import</span> Image\nImage<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">&quot;regression_tree.png&quot;</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/13.5.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeRegressor\nv\ntree_reg1 <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> max_depth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\ntree_reg2 <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> max_depth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>\ntree_reg1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\ntree_reg2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_regression_predictions</span><span class="token punctuation">(</span>tree_reg<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ylabel<span class="token operator">=</span><span class="token string">&quot;$y$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n    y_pred <span class="token operator">=</span> tree_reg<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x1<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span>axes<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> ylabel<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span>ylabel<span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">&quot;b.&quot;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y_pred<span class="token punctuation">,</span> <span class="token string">&quot;r.-&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">r&quot;$\\hat{y}$&quot;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\n\nplot_regression_predictions<span class="token punctuation">(</span>tree_reg1<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\n<span class="token keyword">for</span> split<span class="token punctuation">,</span> style <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.1973</span><span class="token punctuation">,</span> <span class="token string">&quot;k-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.0917</span><span class="token punctuation">,</span> <span class="token string">&quot;k--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.7718</span><span class="token punctuation">,</span> <span class="token string">&quot;k--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>split<span class="token punctuation">,</span> split<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> style<span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.21</span><span class="token punctuation">,</span> <span class="token number">0.65</span><span class="token punctuation">,</span> <span class="token string">&quot;Depth=0&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token string">&quot;Depth=1&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.65</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token string">&quot;Depth=1&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;upper center&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;max_depth=2&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\n\nplot_regression_predictions<span class="token punctuation">(</span>tree_reg2<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ylabel<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> split<span class="token punctuation">,</span> style <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.1973</span><span class="token punctuation">,</span> <span class="token string">&quot;k-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.0917</span><span class="token punctuation">,</span> <span class="token string">&quot;k--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.7718</span><span class="token punctuation">,</span> <span class="token string">&quot;k--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>split<span class="token punctuation">,</span> split<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> style<span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> split <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">0.0458</span><span class="token punctuation">,</span> <span class="token number">0.1298</span><span class="token punctuation">,</span> <span class="token number">0.2873</span><span class="token punctuation">,</span> <span class="token number">0.9040</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>split<span class="token punctuation">,</span> split<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;k:&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">&quot;Depth=2&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;max_depth=3&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/13.6.png" alt=""></p><div class="language-python"><pre><code>tree_reg1 <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\ntree_reg2 <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> min_samples_leaf<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>\ntree_reg1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\ntree_reg2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\n\nx1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\ny_pred1 <span class="token operator">=</span> tree_reg1<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x1<span class="token punctuation">)</span>\ny_pred2 <span class="token operator">=</span> tree_reg2<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x1<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">&quot;b.&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y_pred1<span class="token punctuation">,</span> <span class="token string">&quot;r.-&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">r&quot;$\\hat{y}$&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$y$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;upper center&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;No restrictions&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">&quot;b.&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y_pred2<span class="token punctuation">,</span> <span class="token string">&quot;r.-&quot;</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">r&quot;$\\hat{y}$&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;min_samples_leaf={}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>tree_reg2<span class="token punctuation">.</span>min_samples_leaf<span class="token punctuation">)</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/13.7.png" alt=""></p><h2 id="_14-集成算法原理"><a class="header-anchor" href="#_14-集成算法原理" aria-hidden="true">#</a> 14. 集成算法原理</h2><h2 id="_15-集成算法实验分析"><a class="header-anchor" href="#_15-集成算法实验分析" aria-hidden="true">#</a> 15. 集成算法实验分析</h2><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> os\n<span class="token operator">%</span>matplotlib inline\n<span class="token keyword">import</span> matplotlib\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;axes.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;xtick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;ytick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\n<span class="token keyword">import</span> warnings\nwarnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span>\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.1.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> make_moons\n\nX<span class="token punctuation">,</span>y <span class="token operator">=</span> make_moons<span class="token punctuation">(</span>n_samples<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span> noise<span class="token operator">=</span><span class="token number">0.30</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nX_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;yo&#39;</span><span class="token punctuation">,</span>alpha <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;bs&#39;</span><span class="token punctuation">,</span>alpha <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.2.png" alt=""></p><h3 id="软投票与硬投票"><a class="header-anchor" href="#软投票与硬投票" aria-hidden="true">#</a> 软投票与硬投票</h3><div class="language-"><pre><code>硬投票：直接用类别值，少数服从多数\n软投票：各自分类器的概率值进行加权平均\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># 硬投票实验</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier<span class="token punctuation">,</span> VotingClassifier\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegression\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">import</span> SVC\n\nlog_clf <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nrnd_clf <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nsvm_clf <span class="token operator">=</span> SVC<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n\nvoting_clf <span class="token operator">=</span> VotingClassifier<span class="token punctuation">(</span>estimators <span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;lr&#39;</span><span class="token punctuation">,</span>log_clf<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;rf&#39;</span><span class="token punctuation">,</span>rnd_clf<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;svc&#39;</span><span class="token punctuation">,</span>svm_clf<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>voting<span class="token operator">=</span><span class="token string">&#39;hard&#39;</span><span class="token punctuation">)</span>\n\nvoting_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n\n<span class="token comment"># 牺牲一些时间点  提升准确率  但是提高的不高</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score\n<span class="token keyword">for</span> clf <span class="token keyword">in</span> <span class="token punctuation">(</span>log_clf<span class="token punctuation">,</span>rnd_clf<span class="token punctuation">,</span>svm_clf<span class="token punctuation">,</span>voting_clf<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n    y_pred <span class="token operator">=</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>\n    <span class="token keyword">print</span> <span class="token punctuation">(</span>clf<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__name__<span class="token punctuation">,</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred<span class="token punctuation">)</span><span class="token punctuation">)</span>\nLogisticRegression <span class="token number">0.864</span>\nRandomForestClassifier <span class="token number">0.872</span>\nSVC <span class="token number">0.888</span>\nVotingClassifier <span class="token number">0.896</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier<span class="token punctuation">,</span> VotingClassifier\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegression\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">import</span> SVC\n\nlog_clf <span class="token operator">=</span> LogisticRegression<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nrnd_clf <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n<span class="token comment"># 要把概率值打开 </span>\nsvm_clf <span class="token operator">=</span> SVC<span class="token punctuation">(</span>probability <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n\nvoting_clf <span class="token operator">=</span> VotingClassifier<span class="token punctuation">(</span>estimators <span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;lr&#39;</span><span class="token punctuation">,</span>log_clf<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;rf&#39;</span><span class="token punctuation">,</span>rnd_clf<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;svc&#39;</span><span class="token punctuation">,</span>svm_clf<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>voting<span class="token operator">=</span><span class="token string">&#39;soft&#39;</span><span class="token punctuation">)</span>\n\nvoting_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n\n<span class="token comment"># 软投票比硬投票要靠谱点</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score\n<span class="token keyword">for</span> clf <span class="token keyword">in</span> <span class="token punctuation">(</span>log_clf<span class="token punctuation">,</span>rnd_clf<span class="token punctuation">,</span>svm_clf<span class="token punctuation">,</span>voting_clf<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n    y_pred <span class="token operator">=</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>\n    <span class="token keyword">print</span> <span class="token punctuation">(</span>clf<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__name__<span class="token punctuation">,</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred<span class="token punctuation">)</span><span class="token punctuation">)</span>\nLogisticRegression <span class="token number">0.864</span>\nRandomForestClassifier <span class="token number">0.872</span>\nSVC <span class="token number">0.888</span>\nVotingClassifier <span class="token number">0.912</span>\n</code></pre></div><h3 id="bagging策略"><a class="header-anchor" href="#bagging策略" aria-hidden="true">#</a> Bagging策略</h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.3.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> BaggingClassifier\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeClassifier\n\nbag_clf <span class="token operator">=</span> BaggingClassifier<span class="token punctuation">(</span>DecisionTreeClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  n_estimators <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span>\n                  max_samples <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>\n                  bootstrap <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>\n                  n_jobs <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n                  random_state <span class="token operator">=</span> <span class="token number">42</span>\n<span class="token punctuation">)</span>\nbag_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\ny_pred <span class="token operator">=</span> bag_clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>\n\n\naccuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred<span class="token punctuation">)</span>\n<span class="token number">0.904</span>\n\ntree_clf <span class="token operator">=</span> DecisionTreeClassifier<span class="token punctuation">(</span>random_state <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">)</span>\ntree_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\ny_pred_tree <span class="token operator">=</span> tree_clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>\naccuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred_tree<span class="token punctuation">)</span>\n<span class="token number">0.856</span>\n</code></pre></div><h3 id="决策边界-1"><a class="header-anchor" href="#决策边界-1" aria-hidden="true">#</a> 决策边界</h3><div class="language-python"><pre><code><span class="token comment"># 集成与传统方法对比</span>\n<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>colors <span class="token keyword">import</span> ListedColormap\n<span class="token keyword">def</span> <span class="token function">plot_decision_boundary</span><span class="token punctuation">(</span>clf<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>contour <span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    x1s<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>\n    x2s<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>axes<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axes<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>\n    x1<span class="token punctuation">,</span>x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x1s<span class="token punctuation">,</span>x2s<span class="token punctuation">)</span>\n    X_new <span class="token operator">=</span> np<span class="token punctuation">.</span>c_<span class="token punctuation">[</span>x1<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x2<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n    y_pred <span class="token operator">=</span> clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x1<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>\n    custom_cmap <span class="token operator">=</span> ListedColormap<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;#fafab0&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#9898ff&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#a0faa0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>x1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y_pred<span class="token punctuation">,</span>cmap <span class="token operator">=</span> custom_cmap<span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> contour<span class="token punctuation">:</span>\n        custom_cmap2 <span class="token operator">=</span> ListedColormap<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;#7d7d58&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#4c4c7f&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;#507d50&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>x1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y_pred<span class="token punctuation">,</span>cmap <span class="token operator">=</span> custom_cmap2<span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;yo&#39;</span><span class="token punctuation">,</span>alpha <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;bs&#39;</span><span class="token punctuation">,</span>alpha <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span>axes<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;x1&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;x2&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>tree_clf<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Decision Tree&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 决策树的边界</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>bag_clf<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Decision Tree With Bagging&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 决策树集成的模型 </span>\n<span class="token comment"># 越平稳的边界 越是我们想要的</span>\n<span class="token comment"># Colormap颜色：https://blog.csdn.net/zhaogeng111/article/details/78419015</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.4.png" alt=""></p><h3 id="oob策略"><a class="header-anchor" href="#oob策略" aria-hidden="true">#</a> OOB策略</h3><div class="language-python"><pre><code>bag_clf <span class="token operator">=</span> BaggingClassifier<span class="token punctuation">(</span>DecisionTreeClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  n_estimators <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span>\n                  max_samples <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>\n                  bootstrap <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>\n                  n_jobs <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n                  random_state <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">,</span>\n                  oob_score <span class="token operator">=</span> <span class="token boolean">True</span>\n<span class="token punctuation">)</span>\nbag_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\nbag_clf<span class="token punctuation">.</span>oob_score_\n<span class="token number">0.9253333333333333</span>\n\ny_pred <span class="token operator">=</span> bag_clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>\naccuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred<span class="token punctuation">)</span>\n<span class="token number">0.904</span>\nbag_clf<span class="token punctuation">.</span>oob_decision_function_\n</code></pre></div><h3 id="随机森林"><a class="header-anchor" href="#随机森林" aria-hidden="true">#</a> 随机森林</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier\nrf_clf <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span>\nrf_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\nRandomForestClassifier<span class="token punctuation">(</span>bootstrap<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> class_weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> criterion<span class="token operator">=</span><span class="token string">&#39;gini&#39;</span><span class="token punctuation">,</span>\n            max_depth<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> max_features<span class="token operator">=</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span> max_leaf_nodes<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n            min_impurity_decrease<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> min_impurity_split<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n            min_samples_leaf<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>\n            min_weight_fraction_leaf<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n            oob_score<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>\n            warm_start<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># 特征重要性： sklearn中是看每个特征的平均深度</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_iris\niris <span class="token operator">=</span> load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>\nrf_clf <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>n_estimators<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span>n_jobs<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\nrf_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>iris<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>iris<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> name<span class="token punctuation">,</span>score <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>iris<span class="token punctuation">[</span><span class="token string">&#39;feature_names&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>rf_clf<span class="token punctuation">.</span>feature_importances_<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span>score<span class="token punctuation">)</span>\nsepal length <span class="token punctuation">(</span>cm<span class="token punctuation">)</span> <span class="token number">0.11105536416721994</span>\nsepal width <span class="token punctuation">(</span>cm<span class="token punctuation">)</span> <span class="token number">0.02319505364393038</span>\npetal length <span class="token punctuation">(</span>cm<span class="token punctuation">)</span> <span class="token number">0.44036215067701534</span>\npetal width <span class="token punctuation">(</span>cm<span class="token punctuation">)</span> <span class="token number">0.42538743151183406</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># Mnist中哪些特征比较重要呢？</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> fetch_mldata\nmnist <span class="token operator">=</span> fetch_mldata<span class="token punctuation">(</span><span class="token string">&#39;MNIST original&#39;</span><span class="token punctuation">)</span>\n<span class="token comment"># 28*28的正方形  数字图像</span>\nrf_clf <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>n_estimators<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span>n_jobs<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\nrf_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>mnist<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>mnist<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nrf_clf<span class="token punctuation">.</span>feature_importances_<span class="token punctuation">.</span>shape \n<span class="token punctuation">(</span><span class="token number">784</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">plot_digit</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    image <span class="token operator">=</span> data<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>image<span class="token punctuation">,</span>cmap<span class="token operator">=</span>matplotlib<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>hot<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">&#39;off&#39;</span><span class="token punctuation">)</span>\n\nplot_digit<span class="token punctuation">(</span>rf_clf<span class="token punctuation">.</span>feature_importances_<span class="token punctuation">)</span>\nchar <span class="token operator">=</span> plt<span class="token punctuation">.</span>colorbar<span class="token punctuation">(</span>ticks<span class="token operator">=</span><span class="token punctuation">[</span>rf_clf<span class="token punctuation">.</span>feature_importances_<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>rf_clf<span class="token punctuation">.</span>feature_importances_<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nchar<span class="token punctuation">.</span>ax<span class="token punctuation">.</span>set_yticklabels<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Not important&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Very important&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.5.png" alt=""></p><h3 id="boosting-提升策略-adaboost"><a class="header-anchor" href="#boosting-提升策略-adaboost" aria-hidden="true">#</a> Boosting-提升策略 AdaBoost</h3><div class="language-python"><pre><code><span class="token comment"># 跟上学时的考试一样，这次做错的题，是不是得额外注意，下次的时候就和别错了！</span>\n<span class="token comment"># 以SVM分类器为例来演示AdaBoost的基本策略</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.6.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">import</span> SVC\n\nm <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>X_train<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> subplot<span class="token punctuation">,</span>learning_rate <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    sample_weights <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>m<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>subplot<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        svm_clf <span class="token operator">=</span> SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">&#39;rbf&#39;</span><span class="token punctuation">,</span>C<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n        svm_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>sample_weight <span class="token operator">=</span> sample_weights<span class="token punctuation">)</span>\n        y_pred <span class="token operator">=</span> svm_clf<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_train<span class="token punctuation">)</span>\n        sample_weights<span class="token punctuation">[</span>y_pred <span class="token operator">!=</span> y_train<span class="token punctuation">]</span> <span class="token operator">*=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>learning_rate<span class="token punctuation">)</span>\n        plot_decision_boundary<span class="token punctuation">(</span>svm_clf<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;learning_rate = {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>learning_rate<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> subplot <span class="token operator">==</span> <span class="token number">121</span><span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.65</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.10</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span>  <span class="token number">0.10</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.4</span><span class="token punctuation">,</span>  <span class="token number">0.55</span><span class="token punctuation">,</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\n        plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.3</span><span class="token punctuation">,</span>  <span class="token number">0.90</span><span class="token punctuation">,</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.7.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> AdaBoostClassifier\nada_clf <span class="token operator">=</span> AdaBoostClassifier<span class="token punctuation">(</span>DecisionTreeClassifier<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                   n_estimators <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>\n                   learning_rate <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">,</span>\n                   random_state <span class="token operator">=</span> <span class="token number">42</span>\n<span class="token punctuation">)</span>\nada_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\nplot_decision_boundary<span class="token punctuation">(</span>ada_clf<span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.8.png" alt=""></p><h3 id="gradient-boosting"><a class="header-anchor" href="#gradient-boosting" aria-hidden="true">#</a> Gradient Boosting</h3><div class="language-python"><pre><code><span class="token comment"># 梯度提升决策树</span>\nnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span>\nX <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span>\ny <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">*</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">0.05</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\n\ny<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeRegressor\ntree_reg1 <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>\ntree_reg1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n\ny2 <span class="token operator">=</span> y <span class="token operator">-</span> tree_reg1<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\ntree_reg2 <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>\ntree_reg2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y2<span class="token punctuation">)</span>\n\ny3 <span class="token operator">=</span> y2 <span class="token operator">-</span> tree_reg2<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\ntree_reg3 <span class="token operator">=</span> DecisionTreeRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>\ntree_reg3<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y3<span class="token punctuation">)</span>\n\n\nX_new <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\ny_pred <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>tree<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span> <span class="token keyword">for</span> tree <span class="token keyword">in</span> <span class="token punctuation">(</span>tree_reg1<span class="token punctuation">,</span>tree_reg2<span class="token punctuation">,</span>tree_reg3<span class="token punctuation">)</span><span class="token punctuation">)</span>\ny_pred\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.75026781</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">def</span> <span class="token function">plot_predictions</span><span class="token punctuation">(</span>regressors<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> axes<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;r-&quot;</span><span class="token punctuation">,</span> data_style<span class="token operator">=</span><span class="token string">&quot;b.&quot;</span><span class="token punctuation">,</span> data_label<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n    y_pred <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>regressor<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x1<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> regressor <span class="token keyword">in</span> regressors<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> data_style<span class="token punctuation">,</span> label<span class="token operator">=</span>data_label<span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y_pred<span class="token punctuation">,</span> style<span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span>label<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> label <span class="token keyword">or</span> data_label<span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;upper center&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span>axes<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">321</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>tree_reg1<span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;$h_1(x_1)$&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;g-&quot;</span><span class="token punctuation">,</span> data_label<span class="token operator">=</span><span class="token string">&quot;Training set&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$y$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;Residuals and tree predictions&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">322</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>tree_reg1<span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;$h(x_1) = h_1(x_1)$&quot;</span><span class="token punctuation">,</span> data_label<span class="token operator">=</span><span class="token string">&quot;Training set&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$y$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;Ensemble predictions&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">323</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>tree_reg2<span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;$h_2(x_1)$&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;g-&quot;</span><span class="token punctuation">,</span> data_style<span class="token operator">=</span><span class="token string">&quot;k+&quot;</span><span class="token punctuation">,</span> data_label<span class="token operator">=</span><span class="token string">&quot;Residuals&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$y - h_1(x_1)$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">324</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>tree_reg1<span class="token punctuation">,</span> tree_reg2<span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;$h(x_1) = h_1(x_1) + h_2(x_1)$&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$y$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">325</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>tree_reg3<span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;$h_3(x_1)$&quot;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&quot;g-&quot;</span><span class="token punctuation">,</span> data_style<span class="token operator">=</span><span class="token string">&quot;k+&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$y - h_1(x_1) - h_2(x_1)$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">326</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>tree_reg1<span class="token punctuation">,</span> tree_reg2<span class="token punctuation">,</span> tree_reg3<span class="token punctuation">]</span><span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&quot;$h(x_1) = h_1(x_1) + h_2(x_1) + h_3(x_1)$&quot;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;$x_1$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;$y$&quot;</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.9.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> GradientBoostingRegressor\ngbrt <span class="token operator">=</span> GradientBoostingRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                          n_estimators <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>\n                          learning_rate <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">,</span>\n                          random_state <span class="token operator">=</span> <span class="token number">41</span>\n<span class="token punctuation">)</span>\ngbrt<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n\ngbrt_slow_1 <span class="token operator">=</span> GradientBoostingRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                          n_estimators <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>\n                          learning_rate <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">,</span>\n                          random_state <span class="token operator">=</span> <span class="token number">41</span>\n<span class="token punctuation">)</span>\ngbrt_slow_1<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span> \n\ngbrt_slow_2 <span class="token operator">=</span> GradientBoostingRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                          n_estimators <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>\n                          learning_rate <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">,</span>\n                          random_state <span class="token operator">=</span> <span class="token number">41</span>\n<span class="token punctuation">)</span>\ngbrt_slow_2<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>gbrt<span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;Ensemble predictions&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;learning_rate={},n_estimators={}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>gbrt<span class="token punctuation">.</span>learning_rate<span class="token punctuation">,</span>gbrt<span class="token punctuation">.</span>n_estimators<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>gbrt_slow_1<span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;Ensemble predictions&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;learning_rate={},n_estimators={}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>gbrt_slow_1<span class="token punctuation">.</span>learning_rate<span class="token punctuation">,</span>gbrt_slow_1<span class="token punctuation">.</span>n_estimators<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.10.png" alt=""></p><div class="language-python"><pre><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>gbrt_slow_2<span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;Ensemble predictions&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;learning_rate={},n_estimators={}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>gbrt_slow_2<span class="token punctuation">.</span>learning_rate<span class="token punctuation">,</span>gbrt_slow_2<span class="token punctuation">.</span>n_estimators<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>gbrt_slow_1<span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>label <span class="token operator">=</span> <span class="token string">&#39;Ensemble predictions&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;learning_rate={},n_estimators={}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>gbrt_slow_1<span class="token punctuation">.</span>learning_rate<span class="token punctuation">,</span>gbrt_slow_1<span class="token punctuation">.</span>n_estimators<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.11.png" alt=""></p><h3 id="提前停止策略"><a class="header-anchor" href="#提前停止策略" aria-hidden="true">#</a> 提前停止策略</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> mean_squared_error\nX_train<span class="token punctuation">,</span>X_val<span class="token punctuation">,</span>y_train<span class="token punctuation">,</span>y_val <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>random_state<span class="token operator">=</span><span class="token number">49</span><span class="token punctuation">)</span>\ngbrt <span class="token operator">=</span> GradientBoostingRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                          n_estimators <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">,</span>\n                          random_state <span class="token operator">=</span> <span class="token number">42</span>\n<span class="token punctuation">)</span>\ngbrt<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n\nerrors <span class="token operator">=</span> <span class="token punctuation">[</span>mean_squared_error<span class="token punctuation">(</span>y_val<span class="token punctuation">,</span>y_pred<span class="token punctuation">)</span> <span class="token keyword">for</span> y_pred <span class="token keyword">in</span> gbrt<span class="token punctuation">.</span>staged_predict<span class="token punctuation">(</span>X_val<span class="token punctuation">)</span><span class="token punctuation">]</span>\nbst_n_estimators <span class="token operator">=</span> np<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span>errors<span class="token punctuation">)</span>\n\ngbrt_best <span class="token operator">=</span> GradientBoostingRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                          n_estimators <span class="token operator">=</span> bst_n_estimators<span class="token punctuation">,</span>\n                          random_state <span class="token operator">=</span> <span class="token number">42</span>\n<span class="token punctuation">)</span>\ngbrt_best<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code>min_error <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span>errors<span class="token punctuation">)</span>\nmin_error\n<span class="token number">0.002712853325235463</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>errors<span class="token punctuation">,</span><span class="token string">&#39;b.-&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>bst_n_estimators<span class="token punctuation">,</span>bst_n_estimators<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span>min_error<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;k--&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>min_error<span class="token punctuation">,</span>min_error<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;k--&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.01</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Val Error&#39;</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_predictions<span class="token punctuation">(</span><span class="token punctuation">[</span>gbrt_best<span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">,</span>y<span class="token punctuation">,</span>axes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Best Model(%d trees)&#39;</span><span class="token operator">%</span>bst_n_estimators<span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.12.png" alt=""></p><div class="language-python"><pre><code>gbrt <span class="token operator">=</span> GradientBoostingRegressor<span class="token punctuation">(</span>max_depth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n                             random_state <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">,</span>\n                                 warm_start <span class="token operator">=</span><span class="token boolean">True</span>\n<span class="token punctuation">)</span>\nerror_going_up <span class="token operator">=</span> <span class="token number">0</span>\nmin_val_error <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&#39;inf&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">for</span> n_estimators <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    gbrt<span class="token punctuation">.</span>n_estimators <span class="token operator">=</span> n_estimators\n    gbrt<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span>y_train<span class="token punctuation">)</span>\n    y_pred <span class="token operator">=</span> gbrt<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_val<span class="token punctuation">)</span>\n    val_error <span class="token operator">=</span> mean_squared_error<span class="token punctuation">(</span>y_val<span class="token punctuation">,</span>y_pred<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> val_error <span class="token operator">&lt;</span> min_val_error<span class="token punctuation">:</span>\n        min_val_error <span class="token operator">=</span> val_error\n        error_going_up <span class="token operator">=</span> <span class="token number">0</span>\n    <span class="token keyword">else</span><span class="token punctuation">:</span>\n        error_going_up <span class="token operator">+=</span><span class="token number">1</span>\n        <span class="token keyword">if</span> error_going_up <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>\n            <span class="token keyword">break</span>\n\n<span class="token keyword">print</span> <span class="token punctuation">(</span>gbrt<span class="token punctuation">.</span>n_estimators<span class="token punctuation">)</span>\n<span class="token number">61</span>\n</code></pre></div><h3 id="stacking（堆叠集成）"><a class="header-anchor" href="#stacking（堆叠集成）" aria-hidden="true">#</a> Stacking（堆叠集成）</h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.13.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> fetch_mldata\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split\n\nmnist <span class="token operator">=</span> fetch_mldata<span class="token punctuation">(</span><span class="token string">&#39;MNIST original&#39;</span><span class="token punctuation">)</span>\n\nX_train_val<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train_val<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>\n    mnist<span class="token punctuation">.</span>data<span class="token punctuation">,</span> mnist<span class="token punctuation">.</span>target<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nX_train<span class="token punctuation">,</span> X_val<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_val <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>\n    X_train_val<span class="token punctuation">,</span> y_train_val<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier<span class="token punctuation">,</span> ExtraTreesClassifier\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">import</span> LinearSVC\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>neural_network <span class="token keyword">import</span> MLPClassifier\nrandom_forest_clf <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nextra_trees_clf <span class="token operator">=</span> ExtraTreesClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nsvm_clf <span class="token operator">=</span> LinearSVC<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nmlp_clf <span class="token operator">=</span> MLPClassifier<span class="token punctuation">(</span>random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\n\nestimators <span class="token operator">=</span> <span class="token punctuation">[</span>random_forest_clf<span class="token punctuation">,</span> extra_trees_clf<span class="token punctuation">,</span> svm_clf<span class="token punctuation">,</span> mlp_clf<span class="token punctuation">]</span>\n<span class="token keyword">for</span> estimator <span class="token keyword">in</span> estimators<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Training the&quot;</span><span class="token punctuation">,</span> estimator<span class="token punctuation">)</span>\n    estimator<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>\n \nX_val_predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X_val<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>estimators<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>\n\n<span class="token keyword">for</span> index<span class="token punctuation">,</span> estimator <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>estimators<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    X_val_predictions<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> index<span class="token punctuation">]</span> <span class="token operator">=</span> estimator<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_val<span class="token punctuation">)</span>\n    \nX_val_predictions\n\nrnd_forest_blender <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>n_estimators<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> oob_score<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>\nrnd_forest_blender<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_val_predictions<span class="token punctuation">,</span> y_val<span class="token punctuation">)</span>\nrnd_forest_blender<span class="token punctuation">.</span>oob_score_\n<span class="token number">0.9642</span>\n</code></pre></div><h2 id="_16-支持向量机原理"><a class="header-anchor" href="#_16-支持向量机原理" aria-hidden="true">#</a> 16. 支持向量机原理</h2><h2 id="_17-支持向量机实验分析"><a class="header-anchor" href="#_17-支持向量机实验分析" aria-hidden="true">#</a> 17. 支持向量机实验分析</h2><div class="language-python"><pre><code><span class="token comment"># 与传统算法进行对比，看看SVM究竟能带来什么样的效果</span>\n<span class="token comment"># 软间隔的作用，这么复杂的算法肯定会导致过拟合现象，如何来进行解决呢？</span>\n<span class="token comment"># 核函数的作用，如果只是做线性分类，好像轮不到SVM登场了，核函数才是它的强大之处！</span>\n<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> os\n<span class="token operator">%</span>matplotlib inline\n<span class="token keyword">import</span> matplotlib\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;axes.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">14</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;xtick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\nplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">&#39;ytick.labelsize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>\n<span class="token keyword">import</span> warnings\nwarnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="支持向量机带来的效果"><a class="header-anchor" href="#支持向量机带来的效果" aria-hidden="true">#</a> 支持向量机带来的效果</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">import</span> SVC\n<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> datasets\n\niris <span class="token operator">=</span> datasets<span class="token punctuation">.</span>load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>\nX <span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\ny <span class="token operator">=</span> iris<span class="token punctuation">[</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">]</span>\n\nsetosa_or_versicolor <span class="token operator">=</span> <span class="token punctuation">(</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>\nX <span class="token operator">=</span> X<span class="token punctuation">[</span>setosa_or_versicolor<span class="token punctuation">]</span>\ny <span class="token operator">=</span> y<span class="token punctuation">[</span>setosa_or_versicolor<span class="token punctuation">]</span>\n\nsvm_clf <span class="token operator">=</span> SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">&#39;linear&#39;</span><span class="token punctuation">,</span>C<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&#39;inf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nsvm_clf<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span>y<span class="token punctuation">)</span>\nSVC<span class="token punctuation">(</span>C<span class="token operator">=</span>inf<span class="token punctuation">,</span> cache_size<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> class_weight<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> coef0<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span>\n  decision_function_shape<span class="token operator">=</span><span class="token string">&#39;ovr&#39;</span><span class="token punctuation">,</span> degree<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token string">&#39;auto_deprecated&#39;</span><span class="token punctuation">,</span>\n  kernel<span class="token operator">=</span><span class="token string">&#39;linear&#39;</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> probability<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n  shrinking<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> tol<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># 一般的模型</span>\nx0 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>\npred_1 <span class="token operator">=</span> <span class="token number">5</span><span class="token operator">*</span>x0 <span class="token operator">-</span> <span class="token number">20</span>\npred_2 <span class="token operator">=</span> x0 <span class="token operator">-</span> <span class="token number">1.8</span>\npred_3 <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">*</span> x0 <span class="token operator">+</span> <span class="token number">0.5</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_svc_decision_boundary</span><span class="token punctuation">(</span>svm_clf<span class="token punctuation">,</span> xmin<span class="token punctuation">,</span> xmax<span class="token punctuation">,</span>sv<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    w <span class="token operator">=</span> svm_clf<span class="token punctuation">.</span>coef_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n    b <span class="token operator">=</span> svm_clf<span class="token punctuation">.</span>intercept_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n    <span class="token keyword">print</span> <span class="token punctuation">(</span>w<span class="token punctuation">)</span>\n    x0 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>xmin<span class="token punctuation">,</span> xmax<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>\n    decision_boundary <span class="token operator">=</span> <span class="token operator">-</span> w<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span>w<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> x0 <span class="token operator">-</span> b<span class="token operator">/</span>w<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n    margin <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span>w<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n    gutter_up <span class="token operator">=</span> decision_boundary <span class="token operator">+</span> margin\n    gutter_down <span class="token operator">=</span> decision_boundary <span class="token operator">-</span> margin\n    <span class="token keyword">if</span> sv<span class="token punctuation">:</span>\n        svs <span class="token operator">=</span> svm_clf<span class="token punctuation">.</span>support_vectors_\n        plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>svs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>svs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token number">180</span><span class="token punctuation">,</span>facecolors<span class="token operator">=</span><span class="token string">&#39;#FFAAAA&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>decision_boundary<span class="token punctuation">,</span><span class="token string">&#39;k-&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>gutter_up<span class="token punctuation">,</span><span class="token string">&#39;k--&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>gutter_down<span class="token punctuation">,</span><span class="token string">&#39;k--&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;bs&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;ys&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>pred_1<span class="token punctuation">,</span><span class="token string">&#39;g--&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>pred_2<span class="token punctuation">,</span><span class="token string">&#39;m-&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x0<span class="token punctuation">,</span>pred_3<span class="token punctuation">,</span><span class="token string">&#39;r-&#39;</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>\nplot_svc_decision_boundary<span class="token punctuation">(</span>svm_clf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;bs&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;ys&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.14.png" alt=""></p><h3 id="数据标准化的影响"><a class="header-anchor" href="#数据标准化的影响" aria-hidden="true">#</a> 数据标准化的影响</h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/15.15.png" alt=""></p><h2 id="_18-神经网络原理"><a class="header-anchor" href="#_18-神经网络原理" aria-hidden="true">#</a> 18. 神经网络原理</h2><h2 id="_19-神经网络代码实现"><a class="header-anchor" href="#_19-神经网络代码实现" aria-hidden="true">#</a> 19. 神经网络代码实现</h2><h2 id="_20-贝叶斯算法原理"><a class="header-anchor" href="#_20-贝叶斯算法原理" aria-hidden="true">#</a> 20. 贝叶斯算法原理</h2><h2 id="_21-贝叶斯代码实现"><a class="header-anchor" href="#_21-贝叶斯代码实现" aria-hidden="true">#</a> 21. 贝叶斯代码实现</h2><h2 id="_22-关联规则实战分析"><a class="header-anchor" href="#_22-关联规则实战分析" aria-hidden="true">#</a> 22. 关联规则实战分析</h2><div class="language-"><pre><code>关联规则\n在美国，一些年轻的父亲下班后经常要到超市去买婴儿尿布，超市也因此发现了一个规律，在购买婴儿尿布的年轻父亲们中，有30%～40%的人同时要买一些啤酒。超市随后调整了货架的摆放，把尿布和啤酒放在一起，明显增加了销售额。\n\n若两个或多个变量的取值之间存在某种规律性，就称为关联\n关联规则是寻找在同一个事件中出现的不同项的相关性，比如在一次购买活动中所买不同商品的相关性。\n“在购买计算机的顾客中，有30％的人也同时购买了打印机”\n\n一个样本称为一个“事务”\n每个事务由多个属性来确定，这里的属性称为“项”\n多个项组成的集合称为“项集”\n\n由k个项构成的集合\n{牛奶}、{啤酒}都是1-项集；\n{牛奶，果冻}是2-项集；\n{啤酒，面包，牛奶}是3-项集\nX==&gt;Y含义：\nX和Y是项集\nX称为规则前项（antecedent）\nY称为规则后项（consequent）\n</code></pre></div><div class="language-"><pre><code>事务仅包含其涉及到的项目，而不包含项目的具体信息。\n在超级市场的关联规则挖掘问题中事务是顾客一次购物所购买的商品，但事务中并不包含这些商品的具体信息，如商品的数量、价格等。\n\n支持度（support）：一个项集或者规则在所有事务中出现的频率，σ(X):表示项集X的支持度计数\n项集X的支持度：s(X)=σ(X)/N\n规则X==&gt;Y表示物品集X对物品集Y的支持度，也就是物品集X和物品集Y同时出现的概率\n某天共有100个顾客到商场购买物品，其中有30个顾客同时购买了啤酒和尿布，那么上述的关联规则的支持度就是30％\n\n置信度（confidence）：确定Y在包含X的事务中出现的频繁程度。c(X → Y) = σ(X∪Y)/σ(X)\np（Y│X）＝p（XY）/p(X)。\n置信度反应了关联规则的可信度—购买了项目集X中的商品的顾客同时也购买了Y中商品的可能性有多大\n购买薯片的顾客中有50％的人购买了可乐,则置信度为50％\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/22.1.png" alt=""></p><div class="language-"><pre><code>设最小支持度为50%, 最小可信度为 50%, 则可得到 :\nA==&gt;C (50%, 66.6%)\nC==&gt;A (50%, 100%)\n若关联规则X-&gt;Y的支持度和置信度分别大于或等于用户指定的最小支持率minsupport和最小置信度minconfidence，则称关联规则X-&gt;Y为强关联规则，否则称关联规则X-&gt;Y为弱关联规则。\n\n提升度（lift）：物品集A的出现对物品集B的出现概率发生了多大的变化\nlift（A==&gt;B）=confidence（A==&gt;B）/support(B)=p(B|A)/p(B)\n现在有** 1000 ** 个消费者，有** 500** 人购买了茶叶，其中有** 450人同时** 购买了咖啡，另** 50人** 没有。由于** confidence(茶叶=&gt;咖啡)=450/500=90%** ，由此可能会认为喜欢喝茶的人往往喜欢喝咖啡。但如果另外没有购买茶叶的** 500人** ，其中同样有** 450人** 购买了咖啡，同样是很高的** 置信度90%** ,由此，得到不爱喝茶的也爱喝咖啡。这样看来，其实是否购买咖啡，与有没有购买茶叶并没有关联，两者是相互独立的，其** 提升度90%/[(450+450)/1000]=1** 。\n由此可见，lift正是弥补了confidence的这一缺陷，if lift=1,X与Y独立，X对Y出现的可能性没有提升作用，其值越大(lift&gt;1),则表明X对Y的提升程度越大，也表明关联性越强。\n\nLeverage 与 Conviction的作用和lift类似，都是值越大代表越关联\nLeverage :P(A,B)-P(A)P(B)\nConviction:P(A)P(!B)/P(A,!B)\n</code></pre></div><h3 id="使用mlxtend工具包得出频繁项集与规则"><a class="header-anchor" href="#使用mlxtend工具包得出频繁项集与规则" aria-hidden="true">#</a> 使用mlxtend工具包得出频繁项集与规则</h3><div class="language-python"><pre><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd\n<span class="token keyword">from</span> mlxtend<span class="token punctuation">.</span>frequent_patterns <span class="token keyword">import</span> apriori\n<span class="token keyword">from</span> mlxtend<span class="token punctuation">.</span>frequent_patterns <span class="token keyword">import</span> association_rules\n\ndata <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token string">&#39;Onion&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token string">&#39;Potato&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token string">&#39;Burger&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token string">&#39;Beer&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\ndf <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>\ndf <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Onion&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Potato&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Burger&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Beer&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>\n\n<span class="token comment"># 选择最小支持度为50%</span>\n<span class="token comment"># apriori(df, min_support=0.5, use_colnames=True)</span>\nfrequent_itemsets <span class="token operator">=</span> apriori<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Onion&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Potato&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Burger&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Beer&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> min_support<span class="token operator">=</span><span class="token number">0.50</span><span class="token punctuation">,</span> use_colnames<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\nfrequent_itemsets\nsupport\titemsets\n<span class="token number">0</span>\t<span class="token number">0.666667</span>\t<span class="token punctuation">(</span>Onion<span class="token punctuation">)</span>\n<span class="token number">1</span>\t<span class="token number">0.833333</span>\t<span class="token punctuation">(</span>Potato<span class="token punctuation">)</span>\n<span class="token number">2</span>\t<span class="token number">0.666667</span>\t<span class="token punctuation">(</span>Burger<span class="token punctuation">)</span>\n<span class="token number">3</span>\t<span class="token number">0.666667</span>\t<span class="token punctuation">(</span>Milk<span class="token punctuation">)</span>\n<span class="token number">4</span>\t<span class="token number">0.666667</span>\t<span class="token punctuation">(</span>Potato<span class="token punctuation">,</span> Onion<span class="token punctuation">)</span>\n</code></pre></div><h3 id="计算规则"><a class="header-anchor" href="#计算规则" aria-hidden="true">#</a> 计算规则</h3><div class="language-python"><pre><code><span class="token comment"># association_rules(df, metric=&#39;lift&#39;, min_threshold=1)</span>\n<span class="token comment"># 可以指定不同的衡量标准与最小阈值</span>\nrules <span class="token operator">=</span> association_rules<span class="token punctuation">(</span>frequent_itemsets<span class="token punctuation">,</span> metric<span class="token operator">=</span><span class="token string">&#39;lift&#39;</span><span class="token punctuation">,</span> min_threshold<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\nrules\nantecedents\tconsequents\tantecedent support\tconsequent support\tsupport\tconfidence\tlift\tleverage\tconviction\n<span class="token number">0</span>\t<span class="token punctuation">(</span>Potato<span class="token punctuation">)</span>\t<span class="token punctuation">(</span>Onion<span class="token punctuation">)</span>\t<span class="token number">0.833333</span>\t<span class="token number">0.666667</span>\t<span class="token number">0.666667</span>\t<span class="token number">0.80</span>\t<span class="token number">1.200</span>\t<span class="token number">0.111111</span>\t<span class="token number">1.666667</span>\n<span class="token number">1</span>\t<span class="token punctuation">(</span>Onion<span class="token punctuation">)</span>\t<span class="token punctuation">(</span>Potato<span class="token punctuation">)</span>\t<span class="token number">0.666667</span>\t<span class="token number">0.833333</span>\t<span class="token number">0.666667</span>\t<span class="token number">1.00</span>\t<span class="token number">1.200</span>\t<span class="token number">0.111111</span>\tinf\n<span class="token number">2</span>\t<span class="token punctuation">(</span>Burger<span class="token punctuation">)</span>\t<span class="token punctuation">(</span>Onion<span class="token punctuation">)</span>\t<span class="token number">0.666667</span>\t<span class="token number">0.666667</span>\t<span class="token number">0.500000</span>\t<span class="token number">0.75</span>\t<span class="token number">1.125</span>\t<span class="token number">0.055556</span>\t<span class="token number">1.333333</span>\n\n<span class="token comment"># 返回的是各个的指标的数值，可以按照感兴趣的指标排序观察,但具体解释还得参考实际数据的含义。</span>\nrules <span class="token punctuation">[</span> <span class="token punctuation">(</span>rules<span class="token punctuation">[</span><span class="token string">&#39;lift&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span><span class="token number">1.125</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span> <span class="token punctuation">(</span>rules<span class="token punctuation">[</span><span class="token string">&#39;confidence&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token number">0.8</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span>\n\nantecedents\tconsequents\tantecedent support\tconsequent support\tsupport\tconfidence\tlift\tleverage\tconviction\n<span class="token number">1</span>\t<span class="token punctuation">(</span>Onion<span class="token punctuation">)</span>\t<span class="token punctuation">(</span>Potato<span class="token punctuation">)</span>\t<span class="token number">0.666667</span>\t<span class="token number">0.833333</span>\t<span class="token number">0.666667</span>\t<span class="token number">1.0</span>\t<span class="token number">1.2</span>\t<span class="token number">0.111111</span>\tinf\n<span class="token number">4</span>\t<span class="token punctuation">(</span>Burger<span class="token punctuation">)</span>\t<span class="token punctuation">(</span>Potato<span class="token punctuation">)</span>\t<span class="token number">0.666667</span>\t<span class="token number">0.833333</span>\t<span class="token number">0.666667</span>\t<span class="token number">1.0</span>\t<span class="token number">1.2</span>\t<span class="token number">0.111111</span>\tinf\n<span class="token number">7</span>\t<span class="token punctuation">(</span>Burger<span class="token punctuation">,</span> Onion<span class="token punctuation">)</span>\t<span class="token punctuation">(</span>Potato<span class="token punctuation">)</span>\t<span class="token number">0.500000</span>\t<span class="token number">0.833333</span>\t<span class="token number">0.500000</span>\t<span class="token number">1.0</span>\t<span class="token number">1.2</span>\t<span class="token number">0.083333</span>\tinf\n\n<span class="token comment"># 这几条结果就比较有价值了：</span>\n<span class="token comment">#（洋葱和马铃薯）（汉堡和马铃薯）可以搭配着来卖</span>\n<span class="token comment"># 如果洋葱和汉堡都在购物篮中, 顾客买马铃薯的可能性也比较高，如果他篮子里面没有，可以推荐一下.</span>\n</code></pre></div><h3 id="所有指标的计算公式"><a class="header-anchor" href="#所有指标的计算公式" aria-hidden="true">#</a> 所有指标的计算公式</h3><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/22.2.png" alt=""></p><h3 id="数据需转换成one-hot编码"><a class="header-anchor" href="#数据需转换成one-hot编码" aria-hidden="true">#</a> 数据需转换成one-hot编码</h3><div class="language-python"><pre><code>retail_shopping_basket <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                         <span class="token string">&#39;Basket&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Beer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Diaper&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Pretzels&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Chips&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Aspirin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                   <span class="token punctuation">[</span><span class="token string">&#39;Diaper&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Beer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Chips&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Lotion&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Juice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;BabyFood&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                   <span class="token punctuation">[</span><span class="token string">&#39;Soda&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Chips&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                   <span class="token punctuation">[</span><span class="token string">&#39;Soup&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Beer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Diaper&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;IceCream&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                   <span class="token punctuation">[</span><span class="token string">&#39;Soda&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Coffee&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Milk&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bread&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                                   <span class="token punctuation">[</span><span class="token string">&#39;Beer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Chips&#39;</span><span class="token punctuation">]</span>\n                                  <span class="token punctuation">]</span>\n                         <span class="token punctuation">}</span>\nretail <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>retail_shopping_basket<span class="token punctuation">)</span>\nretail <span class="token operator">=</span> retail<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Basket&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\npd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_colwidth<span class="token operator">=</span><span class="token number">100</span>\n\nretail\nID\tBasket\n<span class="token number">0</span>\t<span class="token number">1</span>\t<span class="token punctuation">[</span>Beer<span class="token punctuation">,</span> Diaper<span class="token punctuation">,</span> Pretzels<span class="token punctuation">,</span> Chips<span class="token punctuation">,</span> Aspirin<span class="token punctuation">]</span>\n\nretail_id <span class="token operator">=</span> retail<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;Basket&#39;</span> <span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>\nretail_id\nretail_Basket <span class="token operator">=</span> retail<span class="token punctuation">.</span>Basket<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>\nretail_Basket\n\nretail_Basket <span class="token operator">=</span> retail_Basket<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>\nretail_Basket\nretail_Basket <span class="token operator">=</span> retail_Basket<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>\nretail_Basket\nAspirin\tBabyFood\tBeer\tBread\tChips\tCoffee\tDiaper\tIceCream\tJuice\tLotion\tMilk\tPretzels\tSoda\tSoup\n<span class="token number">0</span>\t<span class="token number">1</span>\t<span class="token number">0</span>\t<span class="token number">1</span>\t<span class="token number">0</span>\t<span class="token number">1</span>\t<span class="token number">0</span>\t<span class="token number">1</span>\t<span class="token number">0</span>\t<span class="token number">0</span>\t<span class="token number">0</span>\t<span class="token number">0</span>\t<span class="token number">1</span>\t<span class="token number">0</span>\t<span class="token number">0</span>\n\nretail <span class="token operator">=</span> retail_id<span class="token punctuation">.</span>join<span class="token punctuation">(</span>retail_Basket<span class="token punctuation">)</span>\nfrequent_itemsets_2 <span class="token operator">=</span> apriori<span class="token punctuation">(</span>retail<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> use_colnames<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n<span class="token comment"># 如果光考虑支持度support(X&gt;Y), [Beer, Chips] 和 [Beer, Diaper] 都是很频繁的，哪一种组合更相关呢？</span>\nassociation_rules<span class="token punctuation">(</span>frequent_itemsets_2<span class="token punctuation">,</span> metric<span class="token operator">=</span><span class="token string">&#39;lift&#39;</span><span class="token punctuation">)</span>\n\n\n</code></pre></div><h3 id="电影相关联"><a class="header-anchor" href="#电影相关联" aria-hidden="true">#</a> 电影相关联</h3><div class="language-python"><pre><code>movies <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;ml-latest-small/movies.csv&#39;</span><span class="token punctuation">)</span>\nmovies<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\nmovieId\t     title\t              genres\n<span class="token number">0</span>\t<span class="token number">1</span>\tToy Story <span class="token punctuation">(</span><span class="token number">1995</span><span class="token punctuation">)</span>\tAdventure<span class="token operator">|</span>Animation<span class="token operator">|</span>Children<span class="token operator">|</span>Comedy<span class="token operator">|</span>Fantasy\n<span class="token number">1</span>\t<span class="token number">2</span>\tJumanji <span class="token punctuation">(</span><span class="token number">1995</span><span class="token punctuation">)</span>\tAdventure<span class="token operator">|</span>Children<span class="token operator">|</span>Fantasy\n\nmovies_ohe <span class="token operator">=</span> movies<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;genres&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>movies<span class="token punctuation">.</span>genres<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\npd<span class="token punctuation">.</span>options<span class="token punctuation">.</span>display<span class="token punctuation">.</span>max_columns<span class="token operator">=</span><span class="token number">100</span>\nmovies_ohe<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 数据集包括9125部电影，一共有20种不同类型。</span>\nmovies_ohe<span class="token punctuation">.</span>shape\n<span class="token punctuation">(</span><span class="token number">9125</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span>\n\nmovies_ohe<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;movieId&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\nfrequent_itemsets_movies <span class="token operator">=</span> apriori<span class="token punctuation">(</span>movies_ohe<span class="token punctuation">,</span>use_colnames<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> min_support<span class="token operator">=</span><span class="token number">0.025</span><span class="token punctuation">)</span>\nrules_movies <span class="token operator">=</span>  association_rules<span class="token punctuation">(</span>frequent_itemsets_movies<span class="token punctuation">,</span> metric<span class="token operator">=</span><span class="token string">&#39;lift&#39;</span><span class="token punctuation">,</span> min_threshold<span class="token operator">=</span><span class="token number">1.25</span><span class="token punctuation">)</span>\nrules_movies<span class="token punctuation">[</span><span class="token punctuation">(</span>rules_movies<span class="token punctuation">.</span>lift<span class="token operator">&gt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;lift&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n<span class="token comment"># Children和Animation 这俩题材是最相关的了，常识也可以分辨出来。</span>\nmovies<span class="token punctuation">[</span><span class="token punctuation">(</span>movies<span class="token punctuation">.</span>genres<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>contains<span class="token punctuation">(</span><span class="token string">&#39;Children&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">~</span>movies<span class="token punctuation">.</span>genres<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>contains<span class="token punctuation">(</span><span class="token string">&#39;Animation&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n\n</code></pre></div><h2 id="_23-关联规则代码实现"><a class="header-anchor" href="#_23-关联规则代码实现" aria-hidden="true">#</a> 23. 关联规则代码实现</h2><h2 id="_24-词向量word2vec"><a class="header-anchor" href="#_24-词向量word2vec" aria-hidden="true">#</a> 24. 词向量word2vec</h2><h2 id="_25-代码实现词向量word2vec"><a class="header-anchor" href="#_25-代码实现词向量word2vec" aria-hidden="true">#</a> 25. 代码实现词向量word2vec</h2><h2 id="_26-线性判别分析降维-lda"><a class="header-anchor" href="#_26-线性判别分析降维-lda" aria-hidden="true">#</a> 26. 线性判别分析降维 LDA</h2><div class="language-python"><pre><code><span class="token comment"># 适用于有监督 分类 的数据初始降维</span>\n<span class="token comment"># 必须是有监督问题</span>\nfeature_dict <span class="token operator">=</span> <span class="token punctuation">{</span>i<span class="token punctuation">:</span>label <span class="token keyword">for</span> i<span class="token punctuation">,</span>label <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>\n                <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">(</span><span class="token string">&#39;sepal length in cm&#39;</span><span class="token punctuation">,</span>\n                  <span class="token string">&#39;sepal width in cm&#39;</span><span class="token punctuation">,</span>\n                  <span class="token string">&#39;petal length in cm&#39;</span><span class="token punctuation">,</span>\n                  <span class="token string">&#39;petal width in cm&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n\n<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd\n\ndf <span class="token operator">=</span> pd<span class="token punctuation">.</span>io<span class="token punctuation">.</span>parsers<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>\n    filepath_or_buffer<span class="token operator">=</span><span class="token string">&#39;https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data&#39;</span><span class="token punctuation">,</span>\n    header<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>\n    sep<span class="token operator">=</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span>\ndf<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span>l <span class="token keyword">for</span> i<span class="token punctuation">,</span>l <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>feature_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">&#39;class label&#39;</span><span class="token punctuation">]</span>\ndf<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>how<span class="token operator">=</span><span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># to drop the empty line at file-end</span>\n\ndf<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token punctuation">)</span>\nsepal length <span class="token keyword">in</span> cm\tsepal width <span class="token keyword">in</span> cm\tpetal length <span class="token keyword">in</span> cm\tpetal width <span class="token keyword">in</span> cm\t<span class="token keyword">class</span> <span class="token class-name">label</span>\n<span class="token number">145</span>\t<span class="token number">6.7</span>\t<span class="token number">3.0</span>\t<span class="token number">5.2</span>\t<span class="token number">2.3</span>\tIris<span class="token operator">-</span>virginica\n<span class="token number">146</span>\t<span class="token number">6.3</span>\t<span class="token number">2.5</span>\t<span class="token number">5.0</span>\t<span class="token number">1.9</span>\tIris<span class="token operator">-</span>virginica\n\n<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> LabelEncoder\n\nX <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;sepal length in cm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;sepal width in cm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;petal length in cm&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;petal width in cm&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\ny <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;class label&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\n\n<span class="token comment"># 把标签变成数字快捷写法</span>\nenc <span class="token operator">=</span> LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>\nlabel_encoder <span class="token operator">=</span> enc<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>y<span class="token punctuation">)</span>\ny <span class="token operator">=</span> label_encoder<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>\n\n<span class="token comment">#label_dict = {1: &#39;Setosa&#39;, 2: &#39;Versicolor&#39;, 3:&#39;Virginica&#39;}</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.1.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\nnp<span class="token punctuation">.</span>set_printoptions<span class="token punctuation">(</span>precision<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>\n\nmean_vectors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token keyword">for</span> cl <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    mean_vectors<span class="token punctuation">.</span>append<span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span>cl<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Mean Vector class %s: %s\\n&#39;</span> <span class="token operator">%</span><span class="token punctuation">(</span>cl<span class="token punctuation">,</span> mean_vectors<span class="token punctuation">[</span>cl<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    \n\nMean Vector <span class="token keyword">class</span> <span class="token class-name">1</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token number">5.006</span>  <span class="token number">3.418</span>  <span class="token number">1.464</span>  <span class="token number">0.244</span><span class="token punctuation">]</span>\nMean Vector <span class="token keyword">class</span> <span class="token class-name">2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token number">5.936</span>  <span class="token number">2.77</span>   <span class="token number">4.26</span>   <span class="token number">1.326</span><span class="token punctuation">]</span>\nMean Vector <span class="token keyword">class</span> <span class="token class-name">3</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token number">6.588</span>  <span class="token number">2.974</span>  <span class="token number">5.552</span>  <span class="token number">2.026</span><span class="token punctuation">]</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.2.png" alt=""></p><div class="language-python"><pre><code>S_W <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> cl<span class="token punctuation">,</span>mv <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mean_vectors<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    class_sc_mat <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment"># scatter matrix for every class</span>\n    <span class="token keyword">for</span> row <span class="token keyword">in</span> X<span class="token punctuation">[</span>y <span class="token operator">==</span> cl<span class="token punctuation">]</span><span class="token punctuation">:</span>\n        row<span class="token punctuation">,</span> mv <span class="token operator">=</span> row<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mv<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># make column vectors</span>\n        class_sc_mat <span class="token operator">+=</span> <span class="token punctuation">(</span>row<span class="token operator">-</span>mv<span class="token punctuation">)</span><span class="token punctuation">.</span>dot<span class="token punctuation">(</span><span class="token punctuation">(</span>row<span class="token operator">-</span>mv<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token punctuation">)</span>\n    S_W <span class="token operator">+=</span> class_sc_mat                             <span class="token comment"># sum class scatter matrices</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;within-class Scatter Matrix:\\n&#39;</span><span class="token punctuation">,</span> S_W<span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.3.png" alt=""></p><div class="language-python"><pre><code>overall_mean <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>X<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\n\nS_B <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> i<span class="token punctuation">,</span>mean_vec <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>mean_vectors<span class="token punctuation">)</span><span class="token punctuation">:</span>  \n    n <span class="token operator">=</span> X<span class="token punctuation">[</span>y<span class="token operator">==</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n    mean_vec <span class="token operator">=</span> mean_vec<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># make column vector</span>\n    overall_mean <span class="token operator">=</span> overall_mean<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># make column vector</span>\n    S_B <span class="token operator">+=</span> n <span class="token operator">*</span> <span class="token punctuation">(</span>mean_vec <span class="token operator">-</span> overall_mean<span class="token punctuation">)</span><span class="token punctuation">.</span>dot<span class="token punctuation">(</span><span class="token punctuation">(</span>mean_vec <span class="token operator">-</span> overall_mean<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;between-class Scatter Matrix:\\n&#39;</span><span class="token punctuation">,</span> S_B<span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code>eig_vals<span class="token punctuation">,</span> eig_vecs <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>S_W<span class="token punctuation">)</span><span class="token punctuation">.</span>dot<span class="token punctuation">(</span>S_B<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment"># 算每个特征的特征值和特征向量</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    eigvec_sc <span class="token operator">=</span> eig_vecs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>   \n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nEigenvector {}: \\n{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> eigvec_sc<span class="token punctuation">.</span>real<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Eigenvalue {:}: {:.2e}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> eig_vals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>real<span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token comment">#特征向量：表示映射方向</span>\n<span class="token comment">#特征值：特征向量的重要程度</span>\n<span class="token comment">#Make a list of (eigenvalue, eigenvector) tuples</span>\neig_pairs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> eig_vecs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token comment"># Sort the (eigenvalue, eigenvector) tuples from high to low</span>\neig_pairs <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>eig_pairs<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> k<span class="token punctuation">:</span> k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n<span class="token comment"># Visually confirm that the list is correctly sorted by decreasing eigenvalues</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Eigenvalues in decreasing order:\\n&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> eig_pairs<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nEigenvalues <span class="token keyword">in</span> decreasing order<span class="token punctuation">:</span>\n<span class="token number">32.2719577997</span>\n<span class="token number">0.27756686384</span>\n<span class="token number">7.7995841654e-15</span>\n<span class="token number">5.76433252705e-15</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Variance explained:\\n&#39;</span><span class="token punctuation">)</span>\neigv_sum <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">)</span>\n<span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>eig_pairs<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;eigenvalue {0:}: {1:.2%}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>j<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span>eigv_sum<span class="token punctuation">)</span><span class="token punctuation">.</span>real<span class="token punctuation">)</span><span class="token punctuation">)</span>\nVariance explained<span class="token punctuation">:</span>\n\neigenvalue <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">99.15</span><span class="token operator">%</span>\neigenvalue <span class="token number">2</span><span class="token punctuation">:</span> <span class="token number">0.85</span><span class="token operator">%</span>\neigenvalue <span class="token number">3</span><span class="token punctuation">:</span> <span class="token number">0.00</span><span class="token operator">%</span>\neigenvalue <span class="token number">4</span><span class="token punctuation">:</span> <span class="token number">0.00</span><span class="token operator">%</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># 选择前两维特征</span>\nW <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>eig_pairs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> eig_pairs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Matrix W:\\n&#39;</span><span class="token punctuation">,</span> W<span class="token punctuation">.</span>real<span class="token punctuation">)</span>\nMatrix W<span class="token punctuation">:</span>\n <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0.2049</span> <span class="token operator">-</span><span class="token number">0.009</span> <span class="token punctuation">]</span>\n <span class="token punctuation">[</span> <span class="token number">0.3871</span> <span class="token operator">-</span><span class="token number">0.589</span> <span class="token punctuation">]</span>\n <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.5465</span>  <span class="token number">0.2543</span><span class="token punctuation">]</span>\n <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.7138</span> <span class="token operator">-</span><span class="token number">0.767</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>\nX_lda <span class="token operator">=</span> X<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>W<span class="token punctuation">)</span>\n<span class="token keyword">assert</span> X_lda<span class="token punctuation">.</span>shape <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;The matrix is not 150x2 dimensional.&quot;</span>\n</code></pre></div><div class="language-python"><pre><code><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt\n\n<span class="token keyword">def</span> <span class="token function">plot_step_lda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>\n    <span class="token keyword">for</span> label<span class="token punctuation">,</span>marker<span class="token punctuation">,</span>color <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>\n        <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;^&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n        plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span>X_lda<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>real<span class="token punctuation">[</span>y <span class="token operator">==</span> label<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                y<span class="token operator">=</span>X_lda<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>real<span class="token punctuation">[</span>y <span class="token operator">==</span> label<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                marker<span class="token operator">=</span>marker<span class="token punctuation">,</span>\n                color<span class="token operator">=</span>color<span class="token punctuation">,</span>\n                alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>\n                label<span class="token operator">=</span>label_dict<span class="token punctuation">[</span>label<span class="token punctuation">]</span>\n                <span class="token punctuation">)</span>\n\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;LD1&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;LD2&#39;</span><span class="token punctuation">)</span>\n\n    leg <span class="token operator">=</span> plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;upper right&#39;</span><span class="token punctuation">,</span> fancybox<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n    leg<span class="token punctuation">.</span>get_frame<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>set_alpha<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;LDA: Iris projection onto the first 2 linear discriminants&#39;</span><span class="token punctuation">)</span>\n\n    <span class="token comment"># hide axis ticks</span>\n    plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&quot;both&quot;</span><span class="token punctuation">,</span> which<span class="token operator">=</span><span class="token string">&quot;both&quot;</span><span class="token punctuation">,</span> bottom<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> top<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>  \n            labelbottom<span class="token operator">=</span><span class="token string">&quot;on&quot;</span><span class="token punctuation">,</span> left<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> right<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> labelleft<span class="token operator">=</span><span class="token string">&quot;on&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token comment"># remove axis spines</span>\n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;top&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>  \n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;right&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;bottom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    \n\n    plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>tight_layout\n    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nplot_step_lda<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.4.png" alt=""></p><h3 id="官方的包"><a class="header-anchor" href="#官方的包" aria-hidden="true">#</a> 官方的包</h3><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>discriminant_analysis <span class="token keyword">import</span> LinearDiscriminantAnalysis <span class="token keyword">as</span> LDA\n\n<span class="token comment"># LDA</span>\nsklearn_lda <span class="token operator">=</span> LDA<span class="token punctuation">(</span>n_components<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>\nX_lda_sklearn <span class="token operator">=</span> sklearn_lda<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">plot_scikit_lda</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n    ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>\n    <span class="token keyword">for</span> label<span class="token punctuation">,</span>marker<span class="token punctuation">,</span>color <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>\n        <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;^&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n        plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token operator">=</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y <span class="token operator">==</span> label<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                    y<span class="token operator">=</span>X<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y <span class="token operator">==</span> label<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment"># flip the figure</span>\n                    marker<span class="token operator">=</span>marker<span class="token punctuation">,</span>\n                    color<span class="token operator">=</span>color<span class="token punctuation">,</span>\n                    alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>\n                    label<span class="token operator">=</span>label_dict<span class="token punctuation">[</span>label<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;LD1&#39;</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;LD2&#39;</span><span class="token punctuation">)</span>\n\n    leg <span class="token operator">=</span> plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;upper right&#39;</span><span class="token punctuation">,</span> fancybox<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n    leg<span class="token punctuation">.</span>get_frame<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>set_alpha<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span>\n\n    <span class="token comment"># hide axis ticks</span>\n    plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&quot;both&quot;</span><span class="token punctuation">,</span> which<span class="token operator">=</span><span class="token string">&quot;both&quot;</span><span class="token punctuation">,</span> bottom<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> top<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span>  \n            labelbottom<span class="token operator">=</span><span class="token string">&quot;on&quot;</span><span class="token punctuation">,</span> left<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> right<span class="token operator">=</span><span class="token string">&quot;off&quot;</span><span class="token punctuation">,</span> labelleft<span class="token operator">=</span><span class="token string">&quot;on&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token comment"># remove axis spines</span>\n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;top&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>  \n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;right&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;bottom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>\n    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    \n\n    plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>tight_layout\n    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    \nplot_step_lda<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplot_scikit_lda<span class="token punctuation">(</span>X_lda_sklearn<span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">&#39;Default LDA via scikit-learn&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.5.png" alt=""></p><h2 id="_27-主成分分析降维-pca"><a class="header-anchor" href="#_27-主成分分析降维-pca" aria-hidden="true">#</a> 27.主成分分析降维 PCA</h2><div class="language-python"><pre><code><span class="token comment"># 无监督 的  可以降维</span>\n<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd\ndf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;iris.data&#39;</span><span class="token punctuation">)</span>\ndf<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>\ndf<span class="token punctuation">.</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;sepal_len&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sepal_wid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;petal_len&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;petal_wid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;class&#39;</span><span class="token punctuation">]</span>\ndf<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>\nsepal_len\tsepal_wid\tpetal_len\tpetal_wid\t<span class="token keyword">class</span>\n<span class="token class-name">0</span>\t<span class="token number">4.9</span>\t<span class="token number">3.0</span>\t<span class="token number">1.4</span>\t<span class="token number">0.2</span>\tIris<span class="token operator">-</span>setosa\n<span class="token number">1</span>\t<span class="token number">4.7</span>\t<span class="token number">3.2</span>\t<span class="token number">1.3</span>\t<span class="token number">0.2</span>\tIris<span class="token operator">-</span>setosa\n<span class="token number">2</span>\t<span class="token number">4.6</span>\t<span class="token number">3.1</span>\t<span class="token number">1.5</span>\t<span class="token number">0.2</span>\tIris<span class="token operator">-</span>setos\n</code></pre></div><div class="language-python"><pre><code><span class="token comment"># split data table into data X and class labels y</span>\nX <span class="token operator">=</span> df<span class="token punctuation">.</span>ix<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\ny <span class="token operator">=</span> df<span class="token punctuation">.</span>ix<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values\n\n<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt\n<span class="token keyword">import</span> math\n\nlabel_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">&#39;Iris-Setosa&#39;</span><span class="token punctuation">,</span>\n              <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;Iris-Versicolor&#39;</span><span class="token punctuation">,</span>\n              <span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">&#39;Iris-Virgnica&#39;</span><span class="token punctuation">}</span>\n\nfeature_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token string">&#39;sepal length [cm]&#39;</span><span class="token punctuation">,</span>\n                <span class="token number">1</span><span class="token punctuation">:</span> <span class="token string">&#39;sepal width [cm]&#39;</span><span class="token punctuation">,</span>\n                <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;petal length [cm]&#39;</span><span class="token punctuation">,</span>\n                <span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">&#39;petal width [cm]&#39;</span><span class="token punctuation">}</span>\n\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> cnt <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> cnt<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token keyword">for</span> lab <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">&#39;Iris-setosa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iris-versicolor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iris-virginica&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span>lab<span class="token punctuation">,</span> cnt<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                     label<span class="token operator">=</span>lab<span class="token punctuation">,</span>\n                     bins<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>\n                     alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span>feature_dict<span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;upper right&#39;</span><span class="token punctuation">,</span> fancybox<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.6.png" alt=""></p><div class="language-python"><pre><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler\nX_std <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span>\nmean_vec <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>X_std<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>\ncov_mat <span class="token operator">=</span> <span class="token punctuation">(</span>X_std <span class="token operator">-</span> mean_vec<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token punctuation">.</span>dot<span class="token punctuation">(</span><span class="token punctuation">(</span>X_std <span class="token operator">-</span> mean_vec<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>X_std<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Covariance matrix \\n%s&#39;</span> <span class="token operator">%</span>cov_mat<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;NumPy covariance matrix: \\n%s&#39;</span> <span class="token operator">%</span>np<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>X_std<span class="token punctuation">.</span>T<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\ncov_mat <span class="token operator">=</span> np<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>X_std<span class="token punctuation">.</span>T<span class="token punctuation">)</span>\n<span class="token comment"># 来计算给定矩阵cov_mat的特征值和特征向量</span>\neig_vals<span class="token punctuation">,</span> eig_vecs <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>cov_mat<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Eigenvectors \\n%s&#39;</span> <span class="token operator">%</span>eig_vecs<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nEigenvalues \\n%s&#39;</span> <span class="token operator">%</span>eig_vals<span class="token punctuation">)</span>\nEigenvectors \n<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0.52308496</span> <span class="token operator">-</span><span class="token number">0.36956962</span> <span class="token operator">-</span><span class="token number">0.72154279</span>  <span class="token number">0.26301409</span><span class="token punctuation">]</span>\n <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.25956935</span> <span class="token operator">-</span><span class="token number">0.92681168</span>  <span class="token number">0.2411952</span>  <span class="token operator">-</span><span class="token number">0.12437342</span><span class="token punctuation">]</span>\n <span class="token punctuation">[</span> <span class="token number">0.58184289</span> <span class="token operator">-</span><span class="token number">0.01912775</span>  <span class="token number">0.13962963</span> <span class="token operator">-</span><span class="token number">0.80099722</span><span class="token punctuation">]</span>\n <span class="token punctuation">[</span> <span class="token number">0.56609604</span> <span class="token operator">-</span><span class="token number">0.06381646</span>  <span class="token number">0.63380158</span>  <span class="token number">0.52321917</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n\nEigenvalues \n<span class="token punctuation">[</span> <span class="token number">2.92442837</span>  <span class="token number">0.93215233</span>  <span class="token number">0.14946373</span>  <span class="token number">0.02098259</span><span class="token punctuation">]</span>\n\n<span class="token comment"># Make a list of (eigenvalue, eigenvector) tuples</span>\neig_pairs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> eig_vecs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token keyword">print</span> <span class="token punctuation">(</span>eig_pairs<span class="token punctuation">)</span>\n<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&#39;----------&#39;</span><span class="token punctuation">)</span>\n<span class="token comment"># Sort the (eigenvalue, eigenvector) tuples from high to low</span>\neig_pairs<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n<span class="token comment"># Visually confirm that the list is correctly sorted by decreasing eigenvalues</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Eigenvalues in descending order:&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> eig_pairs<span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n    \ntot <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">)</span>\nvar_exp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">/</span> tot<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>eig_vals<span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token keyword">print</span> <span class="token punctuation">(</span>var_exp<span class="token punctuation">)</span>\n<span class="token comment"># 计算输入数组的累积和</span>\ncum_var_exp <span class="token operator">=</span> np<span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span>var_exp<span class="token punctuation">)</span>\ncum_var_exp\n<span class="token punctuation">[</span><span class="token number">72.620033326920336</span><span class="token punctuation">,</span> <span class="token number">23.147406858644135</span><span class="token punctuation">,</span> <span class="token number">3.7115155645845164</span><span class="token punctuation">,</span> <span class="token number">0.52104424985101538</span><span class="token punctuation">]</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token number">72.62003333</span><span class="token punctuation">,</span>   <span class="token number">95.76744019</span><span class="token punctuation">,</span>   <span class="token number">99.47895575</span><span class="token punctuation">,</span>  <span class="token number">100</span><span class="token punctuation">.</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\nplt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> var_exp<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>\n            label<span class="token operator">=</span><span class="token string">&#39;individual explained variance&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cum_var_exp<span class="token punctuation">,</span> where<span class="token operator">=</span><span class="token string">&#39;mid&#39;</span><span class="token punctuation">,</span>\n             label<span class="token operator">=</span><span class="token string">&#39;cumulative explained variance&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Explained variance ratio&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Principal components&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;best&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.7.png" alt=""></p><div class="language-python"><pre><code>matrix_w <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>eig_pairs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                      eig_pairs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Matrix W:\\n&#39;</span><span class="token punctuation">,</span> matrix_w<span class="token punctuation">)</span>\n\nY <span class="token operator">=</span> X_std<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>matrix_w<span class="token punctuation">)</span>  <span class="token comment"># 降维后的数据</span>\narray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.10795032</span><span class="token punctuation">,</span>  <span class="token number">0.64427554</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n       <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.38797131</span><span class="token punctuation">,</span>  <span class="token number">0.30583307</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre></div><div class="language-python"><pre><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> lab<span class="token punctuation">,</span> col <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;Iris-setosa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iris-versicolor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iris-virginica&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">(</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n     plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">[</span>y<span class="token operator">==</span>lab<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                X<span class="token punctuation">[</span>y<span class="token operator">==</span>lab<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                label<span class="token operator">=</span>lab<span class="token punctuation">,</span>\n                c<span class="token operator">=</span>col<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;sepal_len&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;sepal_wid&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;best&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.8.png" alt=""></p><div class="language-python"><pre><code>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">for</span> lab<span class="token punctuation">,</span> col <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;Iris-setosa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iris-versicolor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iris-virginica&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">(</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n     plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>Y<span class="token punctuation">[</span>y<span class="token operator">==</span>lab<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                Y<span class="token punctuation">[</span>y<span class="token operator">==</span>lab<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                label<span class="token operator">=</span>lab<span class="token punctuation">,</span>\n                c<span class="token operator">=</span>col<span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Principal Component 1&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Principal Component 2&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&#39;lower center&#39;</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p><img src="https://cdn.staticaly.com/gh/clint-sfy/blogcdn@master/python/ML/26.9.png" alt=""></p><h2 id="_28-hmm"><a class="header-anchor" href="#_28-hmm" aria-hidden="true">#</a> 28. HMM</h2>',286);t.render=function(a,p,t,e,c,u){return n(),s("div",null,[o])};export default t;export{p as __pageData};
